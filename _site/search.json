{
  "articles": [
    {
      "path": "about.html",
      "title": "OVERVIEW",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-27T01:12:52+08:00"
    },
    {
      "path": "Dashboard.html",
      "title": "DASHBOARD",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  DASHBOARD\r\n  \r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n SIDPG1\r\n\r\n\r\nHome\r\nOverview\r\nDashboard\r\n\r\n\r\n\r\n\r\n\r\n\r\nâ˜°\r\n\r\n\r\n\r\n\r\nvar FlexDashboard = (function () {\r\n\r\n  // initialize options\r\n  var _options = {};\r\n\r\n  var FlexDashboard = function() {\r\n\r\n    // default options\r\n    _options = $.extend(_options, {\r\n      theme: \"cosmo\",\r\n      fillPage: false,\r\n      orientation: 'columns',\r\n      storyboard: false,\r\n      defaultFigWidth: 576,\r\n      defaultFigHeight: 461,\r\n      defaultFigWidthMobile: 360,\r\n      defaultFigHeightMobile: 461,\r\n      isMobile: false,\r\n      isPortrait: false,\r\n      resize_reload: true\r\n    });\r\n  };\r\n\r\n  function init(options) {\r\n\r\n    // extend default options\r\n    $.extend(true, _options, options);\r\n\r\n    // add ids to sections that don't have them (pandoc won't assign ids\r\n    // to e.g. sections with titles consisting of only chinese characters)\r\n    var nextId = 1;\r\n    $('.level1:not([id]),.level2:not([id]),.level3:not([id])').each(function() {\r\n      $(this).attr('id', 'dashboard-' + nextId++);\r\n    });\r\n\r\n    // find navbar items\r\n    var navbarItems = $('#flexdashboard-navbar');\r\n    if (navbarItems.length)\r\n      navbarItems = JSON.parse(navbarItems.html());\r\n    addNavbarItems(navbarItems);\r\n\r\n    // find the main dashboard container\r\n    var dashboardContainer = $('#dashboard-container');\r\n\r\n    // resolve mobile classes\r\n    resolveMobileClasses(dashboardContainer);\r\n\r\n    // one time global initialization for components\r\n    componentsInit(dashboardContainer);\r\n\r\n    // look for a global sidebar\r\n    var globalSidebar = dashboardContainer.find(\".section.level1.sidebar\");\r\n    if (globalSidebar.length > 0) {\r\n\r\n      // global layout for fullscreen displays\r\n      if (!isMobilePhone()) {\r\n\r\n         // hoist it up to the top level\r\n         globalSidebar.insertBefore(dashboardContainer);\r\n\r\n         // lay it out (set width/positions)\r\n         layoutSidebar(globalSidebar, dashboardContainer);\r\n\r\n      // tuck sidebar into first page for mobile phones\r\n      } else {\r\n\r\n        // convert it into a level3 section\r\n        globalSidebar.removeClass('sidebar');\r\n        globalSidebar.removeClass('level1');\r\n        globalSidebar.addClass('level3');\r\n        var h1 = globalSidebar.children('h1');\r\n        var h3 = $('<h3><\/h3>');\r\n        h3.append(h1.contents());\r\n        h3.insertBefore(h1);\r\n        h1.detach();\r\n\r\n        // move it into the first page\r\n        var page = dashboardContainer.find('.section.level1').first();\r\n        if (page.length > 0)\r\n          page.prepend(globalSidebar);\r\n      }\r\n    }\r\n\r\n    // look for pages to layout\r\n    var pages = $('div.section.level1');\r\n    if (pages.length > 0) {\r\n\r\n        // find the navbar and collapse on clicked\r\n        var navbar = $('#navbar');\r\n        navbar.on(\"click\", \"a[data-toggle!=dropdown]\", null, function () {\r\n           navbar.collapse('hide');\r\n        });\r\n\r\n        // envelop the dashboard container in a tab content div\r\n        dashboardContainer.wrapInner('<div class=\"tab-content\"><\/div>');\r\n\r\n        pages.each(function(index) {\r\n\r\n          // lay it out\r\n          layoutDashboardPage($(this));\r\n\r\n          // add it to the navbar\r\n          addToNavbar($(this), index === 0);\r\n\r\n        });\r\n\r\n    } else {\r\n\r\n      // remove the navbar and navbar button if we don't\r\n      // have any navbuttons\r\n      if (navbarItems.length === 0) {\r\n        $('#navbar').remove();\r\n        $('#navbar-button').remove();\r\n      }\r\n\r\n      // add the storyboard class if requested\r\n      if (_options.storyboard)\r\n        dashboardContainer.addClass('storyboard');\r\n\r\n      // layout the entire page\r\n      layoutDashboardPage(dashboardContainer);\r\n    }\r\n\r\n    // if we are in shiny we need to trigger a window resize event to\r\n    // force correct layout of shiny-bound-output elements\r\n    if (isShinyDoc())\r\n      $(window).trigger('resize');\r\n\r\n    // make main components visible\r\n    $('.section.sidebar').css('visibility', 'visible');\r\n    dashboardContainer.css('visibility', 'visible');\r\n\r\n    // handle location hash\r\n    handleLocationHash();\r\n\r\n    // intialize prism highlighting\r\n    initPrismHighlighting();\r\n\r\n    // record mobile and orientation state then register a handler\r\n    // to refresh if resize_reload is set to true and it changes\r\n    _options.isMobile = isMobilePhone();\r\n    _options.isPortrait = isPortrait();\r\n    if (_options.resize_reload) {\r\n      $(window).on('resize', function() {\r\n        if (_options.isMobile !== isMobilePhone() ||\r\n            _options.isPortrait !== isPortrait()) {\r\n          window.location.reload();\r\n        }\r\n      });\r\n    } else {\r\n      // if in desktop mode and resizing to mobile, make sure the heights are 100%\r\n      // This enforces what `fillpage.css` does for \"wider\" pages.\r\n      // Since we are not reloading once the page becomes small, we need to force the height to 100%\r\n      // This is a new situation introduced when `_options.resize_reload` is `false`\r\n      if (! _options.isMobile) {\r\n        // only add if `fillpage.css` was added in the first place\r\n        if (_options.fillPage) {\r\n          // fillpage.css\r\n          $(\"html,body,#dashboard\").css(\"height\", \"100%\");\r\n        }\r\n      }\r\n    }\r\n    // trigger layoutcomplete event\r\n    dashboardContainer.trigger('flexdashboard:layoutcomplete');\r\n  }\r\n\r\n  function resolveMobileClasses(dashboardContainer) {\r\n     // add top level layout class\r\n    dashboardContainer.addClass(isMobilePhone() ? 'mobile-layout' :\r\n                                                  'desktop-layout');\r\n\r\n    // look for .mobile sections and add .no-mobile to their peers\r\n    var mobileSections = $('.section.mobile');\r\n    mobileSections.each(function() {\r\n       var id = $(this).attr('id');\r\n       var nomobileId = id.replace(/-\\d+$/, '');\r\n       $('#' + nomobileId).addClass('no-mobile');\r\n    });\r\n  }\r\n\r\n  function addNavbarItems(navbarItems) {\r\n\r\n    var navbarLeft = $('ul.navbar-left');\r\n    var navbarRight = $('ul.navbar-right');\r\n\r\n    for (var i = 0; i<navbarItems.length; i++) {\r\n\r\n      // get the item\r\n      var item = navbarItems[i];\r\n\r\n      // determine the container\r\n      var container = null;\r\n      if (item.align === \"left\")\r\n        container = navbarLeft;\r\n      else\r\n        container = navbarRight;\r\n\r\n      // navbar menu if we have multiple items\r\n      if (item.items) {\r\n        var menu = navbarMenu(null, item.icon, item.title, container);\r\n        for (var j = 0; j<item.items.length; j++) {\r\n          var subItem = item.items[j];\r\n          var li = $('<li><\/li>');\r\n          li.append(navbarLink(subItem.icon, subItem.title, subItem.href, subItem.target));\r\n          menu.append(li);\r\n        }\r\n      } else {\r\n        var li = $('<li><\/li>');\r\n        li.append(navbarLink(item.icon, item.title, item.href, item.target));\r\n        container.append(li);\r\n      }\r\n    }\r\n  }\r\n\r\n  // create or get a reference to an existing dropdown menu\r\n  function navbarMenu(id, icon, title, container) {\r\n    var existingMenu = [];\r\n    if (id)\r\n      existingMenu = container.children('#' + id);\r\n    if (existingMenu.length > 0) {\r\n      return existingMenu.children('ul');\r\n    } else {\r\n      var li = $('<li><\/li>');\r\n      if (id)\r\n        li.attr('id', id);\r\n      li.addClass('dropdown');\r\n      // auto add \"Share\" title on mobile if necessary\r\n      if (!title && icon && (icon === \"fa-share-alt\") && isMobilePhone())\r\n        title = \"Share\";\r\n      if (title) {\r\n        title = title + ' <span class=\"caret\"><\/span>';\r\n      }\r\n      var a = navbarLink(icon, title, \"#\");\r\n      a.addClass('dropdown-toggle');\r\n      a.attr('data-toggle', 'dropdown');\r\n      a.attr('role', 'button');\r\n      a.attr('aria-expanded', 'false');\r\n      li.append(a);\r\n      var ul = $('<ul class=\"dropdown-menu\"><\/ul>');\r\n      ul.attr('role', 'menu');\r\n      li.append(ul);\r\n      container.append(li);\r\n      return ul;\r\n    }\r\n  }\r\n\r\n  function addToNavbar(page, active) {\r\n\r\n    // capture the id and data-icon attribute (if any)\r\n    var id = page.attr('id');\r\n    var icon = page.attr('data-icon');\r\n    var navmenu = page.attr('data-navmenu');\r\n\r\n    // get hidden state (transfer this to navbar)\r\n    var hidden = page.hasClass('hidden');\r\n    page.removeClass('hidden');\r\n\r\n    // sanitize the id for use with bootstrap tabs\r\n    id = id.replace(/[.\\/?&!#<>]/g, '').replace(/\\s/g, '_');\r\n    page.attr('id', id);\r\n\r\n    // get the wrapper\r\n    var wrapper = page.closest('.dashboard-page-wrapper');\r\n\r\n    // move the id to the wrapper\r\n    page.removeAttr('id');\r\n    wrapper.attr('id', id);\r\n\r\n    // add the tab-pane class to the wrapper\r\n    wrapper.addClass('tab-pane');\r\n    if (active)\r\n      wrapper.addClass('active');\r\n\r\n    // get a reference to the h1, discover its inner contens, then detach it\r\n    var h1 = wrapper.find('h1').first();\r\n    var title = h1.contents();\r\n    h1.detach();\r\n\r\n    // create a navbar item\r\n    var li = $('<li><\/li>');\r\n    var a = navbarLink(icon, title, '#' + id);\r\n    a.attr('data-toggle', 'tab');\r\n    li.append(a);\r\n\r\n    // add it to the navbar (or navbar menu if specified)\r\n    var container = $('ul.navbar-left');\r\n    if (navmenu) {\r\n      var menuId = navmenu.replace(/\\s+/g, '');\r\n      var menu = navbarMenu(menuId, null, navmenu, container);\r\n      menu.append(li);\r\n    } else {\r\n      container.append(li);\r\n    }\r\n\r\n    // hide it if requested\r\n    if (hidden)\r\n      li.addClass('hidden');\r\n  }\r\n\r\n  function navbarLink(icon, title, href, target) {\r\n\r\n    var a = $('<a><\/a>');\r\n    if (icon) {\r\n\r\n      // get the name of the icon set and icon\r\n      var dashPos = icon.indexOf(\"-\");\r\n      var iconSet = null;\r\n      var iconSplit = icon.split(\" \");\r\n      if (iconSplit.length > 1) {\r\n        iconSet = iconSplit[0];\r\n        icon = iconSplit.slice(1).join(\" \");\r\n      } else {\r\n        iconSet = icon.substring(0, dashPos);\r\n      }\r\n      var iconName = icon.substring(dashPos + 1);\r\n\r\n      // create the icon\r\n      var iconElement = $('<span class=\"' + iconSet + ' ' + icon + '\"><\/span>');\r\n      if (title)\r\n        iconElement.css('margin-right', '7px');\r\n      a.append(iconElement);\r\n      // if href is null see if we can auto-generate based on icon (e.g. social)\r\n      if (!href)\r\n        maybeGenerateLinkFromIcon(iconName, a);\r\n    }\r\n    if (title)\r\n      a.append(title);\r\n\r\n    // add the href.\r\n    if (href) {\r\n      if (href === \"source_embed\") {\r\n        a.attr('href', '#');\r\n        a.attr('data-featherlight', \"#flexdashboard-source-code\");\r\n        a.featherlight({\r\n            beforeOpen: function(event){\r\n              $('body').addClass('unselectable');\r\n            },\r\n            afterClose: function(event){\r\n              $('body').removeClass('unselectable');\r\n            }\r\n        });\r\n      } else {\r\n        a.attr('href', href);\r\n      }\r\n    }\r\n\r\n    // add the arget\r\n    if (target)\r\n      a.attr('target', target);\r\n\r\n    return a;\r\n  }\r\n\r\n  // auto generate a link from an icon name (e.g. twitter) when possible\r\n  function maybeGenerateLinkFromIcon(iconName, a) {\r\n\r\n     var serviceLinks = {\r\n      \"twitter\": \"https://twitter.com/share?text=\" + encodeURIComponent(document.title) + \"&url=\"+encodeURIComponent(location.href),\r\n      \"facebook\": \"https://www.facebook.com/sharer/sharer.php?s=100&p[url]=\"+encodeURIComponent(location.href),\r\n      \"google-plus\": \"https://plus.google.com/share?url=\"+encodeURIComponent(location.href),\r\n      \"linkedin\": \"https://www.linkedin.com/shareArticle?mini=true&url=\"+encodeURIComponent(location.href) + \"&title=\" + encodeURIComponent(document.title),\r\n      \"pinterest\": \"https://pinterest.com/pin/create/link/?url=\"+encodeURIComponent(location.href) + \"&description=\" + encodeURIComponent(document.title)\r\n    };\r\n\r\n    var makeSocialLink = function(a, href) {\r\n      a.attr('href', '#');\r\n      a.on('click', function(e) {\r\n        e.preventDefault();\r\n        window.open(href);\r\n      });\r\n    };\r\n\r\n    $.each(serviceLinks, function(key, value) {\r\n      if (iconName.indexOf(key) !== -1)\r\n        makeSocialLink(a, value);\r\n    });\r\n  }\r\n\r\n  // layout a dashboard page\r\n  function layoutDashboardPage(page) {\r\n\r\n    // use a page wrapper so that free form content above the\r\n    // dashboard appears at the top rather than the side (as it\r\n    // would without the wrapper in a column orientation)\r\n    var wrapper = $('<div class=\"dashboard-page-wrapper\"><\/div>');\r\n    page.wrap(wrapper);\r\n\r\n    // if there are no level2 or level3 headers synthesize a level3\r\n    // header to contain the (e.g. frame it, scroll container, etc.)\r\n    var headers = page.find('h2,h3');\r\n    if (headers.length === 0)\r\n      page.wrapInner('<div class=\"section level3\"><\/div>');\r\n\r\n    // hoist up any content before level 2 or level 3 headers\r\n    var children = page.children();\r\n    children.each(function(index) {\r\n      if ($(this).hasClass('level2') || $(this).hasClass('level3'))\r\n        return false;\r\n      $(this).insertBefore(page);\r\n    });\r\n\r\n    // determine orientation and fillPage behavior for distinct media\r\n    var orientation, fillPage, storyboard;\r\n\r\n    // media: mobile phone\r\n    if (isMobilePhone()) {\r\n\r\n      // if there is a sidebar we need to ensure it's content\r\n      // is properly framed as an h3\r\n      var sidebar = page.find('.section.sidebar');\r\n      sidebar.removeClass('sidebar');\r\n      sidebar.wrapInner('<div class=\"section level3\"><\/div>');\r\n      var h2 = sidebar.find('h2');\r\n      var h3 = $('<h3><\/h3>');\r\n      h3.append(h2.contents());\r\n      h3.insertBefore(h2);\r\n      h2.detach();\r\n\r\n      // wipeout h2 elements then enclose them in a single h2\r\n      var level2 = page.find('div.section.level2');\r\n      level2.each(function() {\r\n        level2.children('h2').remove();\r\n        level2.children().unwrap();\r\n      });\r\n      page.wrapInner('<div class=\"section level2\"><\/div>');\r\n\r\n      // substitute mobile images\r\n      if (isPortrait()) {\r\n        var mobileFigures = $('img.mobile-figure');\r\n        mobileFigures.each(function() {\r\n          // get the src (might be base64 encoded)\r\n          var src = $(this).attr('src');\r\n\r\n          // find it's peer\r\n          var id = $(this).attr('data-mobile-figure-id');\r\n          var img = $('img[data-figure-id=' + id + \"]\");\r\n          img.attr('src', src)\r\n             .attr('width', _options.defaultFigWidthMobile)\r\n             .attr('height', _options.defaultFigHeightMobile);\r\n        });\r\n      }\r\n\r\n      // hoist storyboard commentary into it's own section\r\n      if (page.hasClass('storyboard')) {\r\n        var commentaryHR = page.find('div.section.level3 hr');\r\n        commentaryHR.each(function() {\r\n          var commentary = $(this).nextAll().detach();\r\n          var commentarySection = $('<div class=\"section level3\"><\/div>');\r\n          commentarySection.append(commentary);\r\n          commentarySection.insertAfter($(this).closest('div.section.level3'));\r\n          $(this).remove();\r\n        });\r\n      }\r\n\r\n      // force a non full screen layout by columns\r\n      orientation = _options.orientation = 'columns';\r\n      fillPage = _options.fillPage = false;\r\n      storyboard = _options.storyboard = false;\r\n\r\n    // media: desktop\r\n    } else {\r\n\r\n      // determine orientation\r\n      orientation = page.attr('data-orientation');\r\n      if (orientation !== 'rows' && orientation != 'columns')\r\n        orientation = _options.orientation;\r\n\r\n      // determine storyboard mode\r\n      storyboard = page.hasClass('storyboard');\r\n\r\n      // fillPage based on options (force for storyboard)\r\n      fillPage = _options.fillPage || storyboard;\r\n\r\n      // handle sidebar\r\n      var sidebar = page.find('.section.level2.sidebar');\r\n      if (sidebar.length > 0)\r\n        layoutSidebar(sidebar, page);\r\n    }\r\n\r\n    // give it and it's parent divs height: 100% if we are in fillPage mode\r\n    if (fillPage) {\r\n      page.addClass('vertical-layout-fill');\r\n      page.css('height', '100%');\r\n      page.parents('div').css('height', '100%');\r\n    } else {\r\n      page.addClass('vertical-layout-scroll');\r\n    }\r\n\r\n    // perform the layout\r\n    if (storyboard)\r\n      layoutPageAsStoryboard(page);\r\n    else if (orientation === 'rows')\r\n      layoutPageByRows(page, fillPage);\r\n    else if (orientation === 'columns')\r\n      layoutPageByColumns(page, fillPage);\r\n  }\r\n\r\n  function layoutSidebar(sidebar, content) {\r\n\r\n    // get it out of the header hierarchy\r\n    sidebar = sidebar.first();\r\n    if (sidebar.hasClass('level1')) {\r\n      sidebar.removeClass('level1');\r\n      sidebar.children('h1').remove();\r\n    } else if (sidebar.hasClass('level2')) {\r\n      sidebar.removeClass('level2');\r\n      sidebar.children('h2').remove();\r\n    }\r\n\r\n    // determine width\r\n    var sidebarWidth = isTablet() ? 220 : 250;\r\n    var dataWidth = parseInt(sidebar.attr('data-width'));\r\n    if (dataWidth)\r\n      sidebarWidth = dataWidth;\r\n\r\n    // set the width and shift the page right to accomodate the sidebar\r\n    sidebar.css('width', sidebarWidth + 'px');\r\n    content.css('padding-left', sidebarWidth + 'px');\r\n\r\n    // wrap it's contents in a form\r\n    sidebar.wrapInner($('<form><\/form>'));\r\n  }\r\n\r\n  function layoutPageAsStoryboard(page) {\r\n\r\n    // create storyboard navigation\r\n    var nav = $('<div class=\"storyboard-nav\"><\/div>');\r\n\r\n    // add navigation buttons\r\n    var prev = $('<button class=\"sbprev\"><i class=\"fa fa-angle-left\"><\/i><\/button>');\r\n    nav.append(prev);\r\n    var next= $('<button class=\"sbnext\"><i class=\"fa fa-angle-right\"><\/i><\/button>');\r\n    nav.append(next);\r\n\r\n    // add navigation frame\r\n    var frameList = $('<div class=\"sbframelist\"><\/div>');\r\n    nav.append(frameList);\r\n    var ul = $('<ul><\/ul>');\r\n    frameList.append(ul);\r\n\r\n     // find all the level3 sections (those are the storyboard frames)\r\n    var frames = page.find('div.section.level3');\r\n    frames.each(function() {\r\n\r\n      // mark it\r\n      $(this).addClass('sbframe');\r\n\r\n      // divide it into chart content and (optional) commentary\r\n      $(this).addClass('dashboard-column-orientation');\r\n\r\n      // stuff the chart into it's own div w/ flex\r\n      $(this).wrapInner('<div class=\"sbframe-component\"><\/div>');\r\n      setFlex($(this), 1);\r\n      var frame = $(this).children('.sbframe-component');\r\n\r\n      // extract the title from the h3\r\n      var li = $('<li><\/li>');\r\n      var h3 = frame.children('h3');\r\n      li.append(h3.contents());\r\n      h3.detach();\r\n      ul.append(li);\r\n\r\n      // extract commentary\r\n      var hr = frame.children('hr');\r\n      if (hr.length) {\r\n        var commentary = hr.nextAll().detach();\r\n        hr.remove();\r\n        var commentaryFrame = $('<div class=\"sbframe-commentary\"><\/div>');\r\n        commentaryFrame.addClass('flowing-content-shim');\r\n        commentaryFrame.addClass('flowing-content-container');\r\n        commentaryFrame.append(commentary);\r\n        $(this).append(commentaryFrame);\r\n\r\n        // look for a data-commentary-width attribute\r\n        var commentaryWidth = $(this).attr('data-commentary-width');\r\n        if (commentaryWidth)\r\n          commentaryFrame.css('width', commentaryWidth + 'px');\r\n      }\r\n\r\n      // layout the chart (force flex)\r\n      var result = layoutChart(frame, true);\r\n\r\n      // ice the notes if there are none\r\n      if (!result.notes)\r\n        frame.find('.chart-notes').remove();\r\n\r\n      // set flex on chart\r\n      setFlex(frame, 1);\r\n    });\r\n\r\n    // create a div to hold all the frames\r\n    var frameContent = $('<div class=\"sbframe-content\"><\/div>');\r\n    frameContent.addClass('dashboard-row-orientation');\r\n    frameContent.append(frames.detach());\r\n\r\n    // row orientation to stack nav and frame content\r\n    page.addClass('dashboard-row-orientation');\r\n    page.append(nav);\r\n    page.append(frameContent);\r\n    setFlex(frameContent, 1);\r\n\r\n    // initialize sly\r\n    var sly = new Sly(frameList, {\r\n    \t\thorizontal: true,\r\n    \t\titemNav: 'basic',\r\n    \t\tsmart: true,\r\n    \t\tactivateOn: 'click',\r\n    \t\tstartAt: 0,\r\n    \t\tscrollBy: 1,\r\n    \t\tactivatePageOn: 'click',\r\n    \t\tspeed: 200,\r\n    \t\tmoveBy: 600,\r\n    \t\tdragHandle: true,\r\n    \t\tdynamicHandle: true,\r\n    \t\tclickBar: true,\r\n    \t\tkeyboardNavBy: 'items',\r\n    \t\tnext: next,\r\n    \t\tprev: prev\r\n    \t}).init();\r\n\r\n    // make first frame active\r\n    frames.removeClass('active');\r\n    frames.first().addClass('active');\r\n\r\n    // subscribe to frame changed events\r\n    sly.on('active', function (eventName, itemIndex) {\r\n      frames.removeClass('active');\r\n      frames.eq(itemIndex).addClass('active')\r\n                          .trigger('shown');\r\n    });\r\n  }\r\n\r\n  function layoutPageByRows(page, fillPage) {\r\n\r\n    // row orientation\r\n    page.addClass('dashboard-row-orientation');\r\n\r\n    // find all the level2 sections (those are the rows)\r\n    var rows = page.find('div.section.level2');\r\n\r\n    // if there are no level2 sections then treat the\r\n    // entire page as if it's a level 2 section\r\n    if (rows.length === 0) {\r\n      page.wrapInner('<div class=\"section level2\"><\/div>');\r\n      rows = page.find('div.section.level2');\r\n    }\r\n\r\n    rows.each(function () {\r\n\r\n      // flags\r\n      var haveNotes = false;\r\n      var haveFlexHeight = true;\r\n\r\n      // remove the h2\r\n      $(this).children('h2').remove();\r\n\r\n      // check for a tabset\r\n      var isTabset = $(this).hasClass('tabset');\r\n      if (isTabset)\r\n        layoutTabset($(this));\r\n\r\n      // give it row layout semantics if it's not a tabset\r\n      if (!isTabset)\r\n        $(this).addClass('dashboard-row');\r\n\r\n      // find all of the level 3 subheads\r\n      var columns = $(this).find('div.section.level3');\r\n\r\n      // determine figureSizes sizes\r\n      var figureSizes = chartFigureSizes(columns);\r\n\r\n      // fixup the columns\r\n      columns.each(function(index) {\r\n\r\n        // layout the chart (force flex if we are in a tabset)\r\n        var result = layoutChart($(this), isTabset);\r\n\r\n        // update flexHeight state\r\n        if (!result.flex)\r\n          haveFlexHeight = false;\r\n\r\n        // update state\r\n        if (result.notes)\r\n          haveNotes = true;\r\n\r\n        // set the column flex based on the figure width\r\n        // (value boxes will just get the default figure width)\r\n        var chartWidth = figureSizes[index].width;\r\n        setFlex($(this), chartWidth + ' ' + chartWidth + ' 0px');\r\n\r\n      });\r\n\r\n      // remove empty chart note divs\r\n      if (isTabset)\r\n        $(this).find('.chart-notes').filter(function() {\r\n            return $(this).html() === \"&nbsp;\";\r\n        }).remove();\r\n      if (!haveNotes)\r\n        $(this).find('.chart-notes').remove();\r\n\r\n       // make it a flexbox row\r\n      if (haveFlexHeight)\r\n        $(this).addClass('dashboard-row-flex');\r\n\r\n      // now we can set the height on all the wrappers (based on maximum\r\n      // figure height + room for title and notes, or data-height on the\r\n      // container if specified). However, don't do this if there is\r\n      // no flex on any of the constituent columns\r\n      var flexHeight = null;\r\n      var dataHeight = parseInt($(this).attr('data-height'));\r\n      if (dataHeight)\r\n        flexHeight = adjustedHeight(dataHeight, columns.first());\r\n      else if (haveFlexHeight)\r\n        flexHeight = maxChartHeight(figureSizes, columns);\r\n      if (flexHeight) {\r\n        if (fillPage)\r\n          setFlex($(this), flexHeight + ' ' + flexHeight + ' 0px');\r\n        else {\r\n          $(this).css('height', flexHeight + 'px');\r\n          setFlex($(this), '0 0 ' + flexHeight + 'px');\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  function layoutPageByColumns(page, fillPage) {\r\n\r\n    // column orientation\r\n    page.addClass('dashboard-column-orientation');\r\n\r\n    // find all the level2 sections (those are the columns)\r\n    var columns = page.find('div.section.level2');\r\n\r\n    // if there are no level2 sections then treat the\r\n    // entire page as if it's a level 2 section\r\n    if (columns.length === 0) {\r\n      page.wrapInner('<div class=\"section level2\"><\/div>');\r\n      columns = page.find('div.section.level2');\r\n    }\r\n\r\n    // layout each column\r\n    columns.each(function (index) {\r\n\r\n      // remove the h2\r\n      $(this).children('h2').remove();\r\n\r\n      // make it a flexbox column\r\n      $(this).addClass('dashboard-column');\r\n\r\n      // check for a tabset\r\n      var isTabset = $(this).hasClass('tabset');\r\n      if (isTabset)\r\n        layoutTabset($(this));\r\n\r\n      // find all the h3 elements\r\n      var rows = $(this).find('div.section.level3');\r\n\r\n      // get the figure sizes for the rows\r\n      var figureSizes = chartFigureSizes(rows);\r\n\r\n      // column flex is the max row width (or data-width if specified)\r\n      var flexWidth;\r\n      var dataWidth = parseInt($(this).attr('data-width'));\r\n      if (dataWidth)\r\n        flexWidth = dataWidth;\r\n      else\r\n        flexWidth = maxChartWidth(figureSizes);\r\n      setFlex($(this), flexWidth + ' ' + flexWidth + ' 0px');\r\n\r\n      // layout each chart\r\n      rows.each(function(index) {\r\n\r\n        // perform the layout\r\n        var result = layoutChart($(this), false);\r\n\r\n        // ice the notes if there are none\r\n        if (!result.notes)\r\n          $(this).find('.chart-notes').remove();\r\n\r\n        // set flex height based on figHeight, then adjust\r\n        if (result.flex) {\r\n          var chartHeight = figureSizes[index].height;\r\n          chartHeight = adjustedHeight(chartHeight, $(this));\r\n          if (fillPage)\r\n            setFlex($(this), chartHeight + ' ' + chartHeight + ' 0px');\r\n          else {\r\n            $(this).css('height', chartHeight + 'px');\r\n            setFlex($(this), chartHeight + ' ' + chartHeight + ' ' + chartHeight + 'px');\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function chartFigureSizes(charts) {\r\n\r\n    // sizes\r\n    var figureSizes = new Array(charts.length);\r\n\r\n    // check each chart\r\n    charts.each(function(index) {\r\n\r\n      // start with default\r\n      figureSizes[index] = {\r\n        width: _options.defaultFigWidth,\r\n        height: _options.defaultFigHeight\r\n      };\r\n\r\n      // look for data-height or data-width then knit options\r\n      var dataWidth = parseInt($(this).attr('data-width'));\r\n      var dataHeight = parseInt($(this).attr('data-height'));\r\n      var knitrOptions = $(this).find('.knitr-options:first');\r\n      var knitrWidth, knitrHeight;\r\n      if (knitrOptions) {\r\n        knitrWidth = parseInt(knitrOptions.attr('data-fig-width'));\r\n        knitrHeight =  parseInt(knitrOptions.attr('data-fig-height'));\r\n      }\r\n\r\n      // width\r\n      if (dataWidth)\r\n        figureSizes[index].width = dataWidth;\r\n      else if (knitrWidth)\r\n        figureSizes[index].width = knitrWidth;\r\n\r\n      // height\r\n      if (dataHeight)\r\n        figureSizes[index].height = dataHeight;\r\n      else if (knitrHeight)\r\n        figureSizes[index].height = knitrHeight;\r\n    });\r\n\r\n    // return sizes\r\n    return figureSizes;\r\n  }\r\n\r\n  function maxChartHeight(figureSizes, charts) {\r\n\r\n    // first compute the maximum height\r\n    var maxHeight = _options.defaultFigHeight;\r\n    for (var i = 0; i<figureSizes.length; i++)\r\n      if (figureSizes[i].height > maxHeight)\r\n        maxHeight = figureSizes[i].height;\r\n\r\n    // now add offests for chart title and chart notes\r\n    if (charts.length)\r\n      maxHeight = adjustedHeight(maxHeight, charts.first());\r\n\r\n    return maxHeight;\r\n  }\r\n\r\n  function adjustedHeight(height, chart) {\r\n    if (chart.length > 0) {\r\n      var chartTitle = chart.find('.chart-title');\r\n      if (chartTitle.length)\r\n        height += chartTitle.first().outerHeight();\r\n      var chartNotes = chart.find('.chart-notes');\r\n      if (chartNotes.length)\r\n        height += chartNotes.first().outerHeight();\r\n    }\r\n    return height;\r\n  }\r\n\r\n  function maxChartWidth(figureSizes) {\r\n    var maxWidth = _options.defaultFigWidth;\r\n    for (var i = 0; i<figureSizes.length; i++)\r\n      if (figureSizes[i].width > maxWidth)\r\n        maxWidth = figureSizes[i].width;\r\n    return maxWidth;\r\n  }\r\n\r\n  // layout a chart\r\n  function layoutChart(chart, forceFlex) {\r\n\r\n    // state to return\r\n    var result = {\r\n      notes: false,\r\n      flex: false\r\n    };\r\n\r\n    // extract the title\r\n    var title = extractTitle(chart);\r\n\r\n    // find components that apply to this container\r\n    var components = componentsFind(chart);\r\n\r\n    // if it's a custom component then call it and return\r\n    var customComponents = componentsCustom(components);\r\n    if (customComponents.length) {\r\n      componentsLayout(customComponents, title, chart);\r\n      result.notes = false;\r\n      result.flex = forceFlex || componentsFlex(customComponents);\r\n      return result;\r\n    }\r\n\r\n    // put all the content in a chart wrapper div\r\n    chart.addClass('chart-wrapper');\r\n    chart.wrapInner('<div class=\"chart-stage\"><\/div>');\r\n    var chartContent = chart.children('.chart-stage');\r\n\r\n    // flex the content if appropriate\r\n    result.flex = forceFlex || componentsFlex(components);\r\n    if (result.flex) {\r\n      // add flex classes\r\n      chart.addClass('chart-wrapper-flex');\r\n      chartContent.addClass('chart-stage-flex');\r\n\r\n      // additional shim to break out of flexbox sizing\r\n      chartContent.wrapInner('<div class=\"chart-shim\"><\/div>');\r\n      chartContent = chartContent.children('.chart-shim');\r\n    }\r\n\r\n    // set custom data-padding attribute\r\n    var pad = chart.attr('data-padding');\r\n    if (pad) {\r\n      if (pad === \"0\")\r\n        chart.addClass('no-padding');\r\n      else {\r\n        pad = pad + 'px';\r\n        chartContent.css('left', pad)\r\n                    .css('top', pad)\r\n                    .css('right', pad)\r\n                    .css('bottom', pad)\r\n      }\r\n    }\r\n\r\n    // call compoents\r\n    componentsLayout(components, title, chartContent);\r\n\r\n    // also activate components on shiny output\r\n    findShinyOutput(chartContent).on('shiny:value',\r\n      function(event) {\r\n        var element = $(event.target);\r\n        setTimeout(function() {\r\n\r\n          // see if we opted out of flex based on our output (for shiny\r\n          // we can't tell what type of output we have until after the\r\n          // value is bound)\r\n          var components = componentsFind(element);\r\n          var flex = forceFlex || componentsFlex(components);\r\n          if (!flex) {\r\n            chart.css('height', \"\");\r\n            setFlex(chart, \"\");\r\n            chart.removeClass('chart-wrapper-flex');\r\n            chartContent.removeClass('chart-stage-flex');\r\n            chartContent.children().unwrap();\r\n          }\r\n\r\n          // perform layout\r\n          componentsLayout(components, title, element.parent());\r\n        }, 10);\r\n      });\r\n\r\n    // add the title\r\n    var chartTitle = $('<div class=\"chart-title\"><\/div>');\r\n    chartTitle.append(title);\r\n    chart.prepend(chartTitle);\r\n\r\n    // add the notes section\r\n    var chartNotes = $('<div class=\"chart-notes\"><\/div>');\r\n    chartNotes.html('&nbsp;');\r\n    chart.append(chartNotes);\r\n\r\n    // attempt to extract notes if we have a component\r\n    if (components.length)\r\n      result.notes = extractChartNotes(chartContent, chartNotes);\r\n\r\n    // return result\r\n    return result;\r\n  }\r\n\r\n  // build a tabset from a section div with the .tabset class\r\n  function layoutTabset(tabset) {\r\n\r\n    // check for fade option\r\n    var fade = tabset.hasClass(\"tabset-fade\");\r\n    var navClass = \"nav-tabs\";\r\n\r\n    // determine the heading level of the tabset and tabs\r\n    var match = tabset.attr('class').match(/level(\\d) /);\r\n    if (match === null)\r\n      return;\r\n    var tabsetLevel = Number(match[1]);\r\n    var tabLevel = tabsetLevel + 1;\r\n\r\n    // find all subheadings immediately below\r\n    var tabs = tabset.find(\"div.section.level\" + tabLevel);\r\n    if (!tabs.length)\r\n      return;\r\n\r\n    // create tablist and tab-content elements\r\n    var tabList = $('<ul class=\"nav ' + navClass + '\" role=\"tablist\"><\/ul>');\r\n    $(tabs[0]).before(tabList);\r\n    var tabContent = $('<div class=\"tab-content\"><\/div>');\r\n    $(tabs[0]).before(tabContent);\r\n\r\n    // build the tabset\r\n    tabs.each(function(i) {\r\n\r\n      // get the tab div\r\n      var tab = $(tabs[i]);\r\n\r\n      // get the id then sanitize it for use with bootstrap tabs\r\n      var id = tab.attr('id');\r\n\r\n      // sanitize the id for use with bootstrap tabs\r\n      id = id.replace(/[.\\/?&!#<>]/g, '').replace(/\\s/g, '_');\r\n      tab.attr('id', id);\r\n\r\n      // get the heading element within it and grab it's text\r\n      var heading = tab.find('h' + tabLevel + ':first');\r\n      var headingDom = heading.contents();\r\n\r\n      // build and append the tab list item\r\n      var a = $('<a role=\"tab\" data-toggle=\"tab\"><\/a>');\r\n      a.append(headingDom);\r\n      a.attr('href', '#' + id);\r\n      a.attr('aria-controls', id);\r\n      var li = $('<li role=\"presentation\"><\/li>');\r\n      li.append(a);\r\n      if (i === 0)\r\n        li.attr('class', 'active');\r\n      tabList.append(li);\r\n\r\n      // set it's attributes\r\n      tab.attr('role', 'tabpanel');\r\n      tab.addClass('tab-pane');\r\n      tab.addClass('tabbed-pane');\r\n      tab.addClass('no-title');\r\n      if (fade)\r\n        tab.addClass('fade');\r\n      if (i === 0) {\r\n        tab.addClass('active');\r\n        if (fade)\r\n          tab.addClass('in');\r\n      }\r\n\r\n      // move it into the tab content div\r\n      tab.detach().appendTo(tabContent);\r\n    });\r\n\r\n    // add nav-tabs-custom\r\n    tabset.addClass('nav-tabs-custom');\r\n\r\n    // internal layout is dashboard-column with tab-content flexing\r\n    tabset.addClass('dashboard-column');\r\n    setFlex(tabContent, 1);\r\n  }\r\n\r\n  // one time global initialization for components\r\n  function componentsInit(dashboardContainer) {\r\n    for (var i=0; i<window.FlexDashboardComponents.length; i++) {\r\n      var component = window.FlexDashboardComponents[i];\r\n      if (component.init)\r\n        component.init(dashboardContainer);\r\n    }\r\n  }\r\n\r\n  // find components that apply within a container\r\n  function componentsFind(container) {\r\n\r\n    // look for components\r\n    var components = [];\r\n    for (var i=0; i<window.FlexDashboardComponents.length; i++) {\r\n      var component = window.FlexDashboardComponents[i];\r\n      if (component.find(container).length)\r\n        components.push(component);\r\n    }\r\n\r\n    // if there were none then use a special flowing content component\r\n    // that just adds a scrollbar in fillPage mode\r\n    if (components.length == 0) {\r\n      components.push({\r\n        find: function(container) {\r\n          return container;\r\n        },\r\n\r\n        flex: function(fillPage) {\r\n          return fillPage;\r\n        },\r\n\r\n        layout: function(title, container, element, fillPage) {\r\n          if (fillPage) {\r\n            container.addClass('flowing-content-shim');\r\n            container.addClass('flowing-content-container');\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    return components;\r\n  }\r\n\r\n  // if there is a custom component then pick it out\r\n  function componentsCustom(components) {\r\n    var customComponent = [];\r\n    for (var i=0; i<components.length; i++)\r\n      if (components[i].type === \"custom\") {\r\n        customComponent.push(components[i]);\r\n        break;\r\n      }\r\n    return customComponent;\r\n  }\r\n\r\n  // query all components for flex\r\n  function componentsFlex(components) {\r\n\r\n    // no components at all means no flex\r\n    if (components.length === 0)\r\n      return false;\r\n\r\n    // otherwise query components (assume true unless we see false)\r\n    var isMobile = isMobilePhone();\r\n    for (var i=0; i<components.length; i++)\r\n      if (components[i].flex && !components[i].flex(_options.fillPage))\r\n        return false;\r\n    return true;\r\n  }\r\n\r\n  // layout all components\r\n  function componentsLayout(components, title, container) {\r\n    var isMobile = isMobilePhone();\r\n    for (var i=0; i<components.length; i++) {\r\n      var element = components[i].find(container);\r\n      if (components[i].layout) {\r\n        // call layout (don't call other components if it returns false)\r\n        var result = components[i].layout(title, container, element, _options.fillPage);\r\n        if (result === false)\r\n          return;\r\n      }\r\n    }\r\n  }\r\n\r\n  // get a reference to the h3, discover it's inner html, and remove it\r\n  function extractTitle(container) {\r\n    var h3 = container.children('h3').first();\r\n    var title = '';\r\n    if (!container.hasClass('no-title'))\r\n      title = h3.contents();\r\n    h3.detach();\r\n    return title;\r\n  }\r\n\r\n  // extract chart notes\r\n  function extractChartNotes(chartContent, chartNotes) {\r\n    // look for a terminating blockquote or image caption\r\n    var blockquote = chartContent.children('blockquote:last-child');\r\n    var caption = chartContent.children('div.image-container')\r\n                              .children('p.caption');\r\n    if (blockquote.length) {\r\n      chartNotes.empty().append(blockquote.children('p:first-child').contents());\r\n      blockquote.remove();\r\n      return true;\r\n    } else if (caption.length) {\r\n      chartNotes.empty().append(caption.contents());\r\n      caption.remove();\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function findShinyOutput(chartContent) {\r\n    return chartContent.find('.shiny-text-output, .shiny-html-output');\r\n  }\r\n\r\n  // safely detect rendering on a mobile phone\r\n  function isMobilePhone() {\r\n    try\r\n    {\r\n      return ! window.matchMedia(\"only screen and (min-width: 768px)\").matches;\r\n    }\r\n    catch(e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function isFillPage() {\r\n    return _options.fillPage;\r\n  }\r\n\r\n  // detect portrait mode\r\n  function isPortrait() {\r\n    return ($(window).width() < $(window).height());\r\n  }\r\n\r\n  // safely detect rendering on a tablet\r\n  function isTablet() {\r\n    try\r\n    {\r\n      return window.matchMedia(\"only screen and (min-width: 769px) and (max-width: 992px)\").matches;\r\n    }\r\n    catch(e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // test whether this is a shiny doc\r\n  function isShinyDoc() {\r\n    return (typeof(window.Shiny) !== \"undefined\" && !!window.Shiny.outputBindings);\r\n  }\r\n\r\n  // set flex using vendor specific prefixes\r\n  function setFlex(el, flex) {\r\n    el.css('-webkit-box-flex', flex)\r\n      .css('-webkit-flex', flex)\r\n      .css('-ms-flex', flex)\r\n      .css('flex', flex);\r\n  }\r\n\r\n  // support bookmarking of pages\r\n  function handleLocationHash() {\r\n\r\n    // restore tab/page from bookmark\r\n    var hash = window.decodeURIComponent(window.location.hash);\r\n    if (hash.length > 0)\r\n      $('ul.nav a[href=\"' + hash + '\"]').tab('show');\r\n    FlexDashboardUtils.manageActiveNavbarMenu();\r\n\r\n    // navigate to a tab when the history changes\r\n    window.addEventListener(\"popstate\", function(e) {\r\n      var hash = window.decodeURIComponent(window.location.hash);\r\n      var activeTab = $('ul.nav a[href=\"' + hash + '\"]');\r\n      if (activeTab.length) {\r\n        activeTab.tab('show');\r\n      } else {\r\n        $('ul.nav a:first').tab('show');\r\n      }\r\n      FlexDashboardUtils.manageActiveNavbarMenu();\r\n    });\r\n\r\n    // add a hash to the URL when the user clicks on a tab/page\r\n    $('.navbar-nav a[data-toggle=\"tab\"]').on('click', function(e) {\r\n      var baseUrl = FlexDashboardUtils.urlWithoutHash(window.location.href);\r\n      var hash = FlexDashboardUtils.urlHash($(this).attr('href'));\r\n      var href = baseUrl + hash;\r\n      FlexDashboardUtils.setLocation(href);\r\n    });\r\n\r\n    // handle clicks of other links that should activate pages\r\n    var navPages = $('ul.navbar-nav li a[data-toggle=tab]');\r\n    navPages.each(function() {\r\n      var href =  $(this).attr('href');\r\n      var links = $('a[href=\"' + href + '\"][data-toggle!=tab]');\r\n      links.each(function() {\r\n        $(this).on('click', function(e) {\r\n          window.FlexDashboardUtils.showPage(href);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  // tweak Prism highlighting\r\n  function initPrismHighlighting() {\r\n\r\n    if (window.Prism) {\r\n      Prism.languages.insertBefore('r', 'comment', {\r\n        'heading': [\r\n          {\r\n            // title 1\r\n        \t  // =======\r\n\r\n        \t  // title 2\r\n        \t  // -------\r\n        \t  pattern: /\\w+.*(?:\\r?\\n|\\r)(?:====+|----+)/,\r\n            alias: 'operator'\r\n          },\r\n          {\r\n            // ### title 3\r\n            pattern: /(^\\s*)###[^#].+/m,\r\n            lookbehind: true,\r\n            alias: 'operator'\r\n          }\r\n        ]\r\n      });\r\n\r\n      // prism highlight\r\n      Prism.highlightAll();\r\n    }\r\n  }\r\n\r\n\r\n  // get theme color\r\n  var themeColors = {\r\n    bootstrap: {\r\n      primary: \"rgba(51, 122, 183, 0.4)\",\r\n      info: \"rgb(217, 237, 247)\",\r\n      success: \"rgb(223, 240, 216)\",\r\n      warning: \"rgb(252, 248, 227)\",\r\n      danger: \"rgb(242, 222, 222)\"\r\n    },\r\n    cerulean: {\r\n      primary: \"rgb(47, 164, 231)\",\r\n      info: \"rgb(217, 237, 247)\",\r\n      success: \"rgb(223, 240, 216)\",\r\n      warning: \"rgb(252, 248, 227)\",\r\n      danger: \"rgb(242, 222, 222)\"\r\n    },\r\n    journal: {\r\n      primary: \"rgba(235, 104, 100, 0.70)\",\r\n      info: \"rgb(217, 237, 247)\",\r\n      success: \"rgb(223, 240, 216)\",\r\n      warning: \"rgb(252, 248, 227)\",\r\n      danger: \"rgb(242, 222, 222)\"\r\n    },\r\n    flatly: {\r\n      primary: \"rgba(44, 62, 80, 0.70)\",\r\n      info: \"rgba(52, 152, 219, 0.70)\",\r\n      success: \"rgba(24, 188, 156, 0.70)\",\r\n      warning: \"rgba(243, 156, 18, 0.70)\",\r\n      danger: \"rgba(231, 76, 60, 0.70)\"\r\n    },\r\n    readable: {\r\n      primary: \"rgba(69, 130, 236, 0.4)\",\r\n      info: \"rgb(217, 237, 247)\",\r\n      success: \"rgb(223, 240, 216)\",\r\n      warning: \"rgb(252, 248, 227)\",\r\n      danger: \"rgb(242, 222, 222)\"\r\n    },\r\n    spacelab: {\r\n      primary: \"rgba(68, 110, 155, 0.25)\",\r\n      info: \"rgb(217, 237, 247)\",\r\n      success: \"rgb(223, 240, 216)\",\r\n      warning: \"rgb(252, 248, 227)\",\r\n      danger: \"rgb(242, 222, 222)\"\r\n    },\r\n    united: {\r\n      primary: \"rgba(221, 72, 20, 0.30)\",\r\n      info: \"rgb(217, 237, 247)\",\r\n      success: \"rgb(223, 240, 216)\",\r\n      warning: \"rgb(252, 248, 227)\",\r\n      danger: \"rgb(242, 222, 222)\"\r\n    },\r\n    cosmo: {\r\n      primary: \"rgba(39, 128, 227, 0.7)\",\r\n      info: \"rgba(153, 84, 187, 0.7)\",\r\n      success: \"rgba(63, 182, 24, 0.7)\",\r\n      warning: \"rgba(255, 117, 24, 0.7)\",\r\n      danger: \"rgba(255, 0, 57, 0.7)\"\r\n    },\r\n    lumen: {\r\n      primary: \"rgba(21, 140, 186, 0.70)\",\r\n      info: \"rgba(117, 202, 235, 0.90)\",\r\n      success: \"rgba(40, 182, 44, 0.70)\",\r\n      warning: \"rgba(255, 133, 27, 0.70)\",\r\n      danger: \"rgba(255, 65, 54, 0.70)\"\r\n    },\r\n    paper: {\r\n      primary: \"rgba(33, 150, 243, 0.35)\",\r\n      info: \"rgb(225, 190, 231)\",\r\n      success: \"rgb(223, 240, 216)\",\r\n      warning: \"rgb(255, 224, 178)\",\r\n      danger: \"rgb(249, 189, 187)\"\r\n    },\r\n    sandstone: {\r\n      primary: \"rgba(50, 93, 136, 0.3)\",\r\n      info: \"rgb(217, 237, 247)\",\r\n      success: \"rgb(223, 240, 216)\",\r\n      warning: \"rgb(252, 248, 227)\",\r\n      danger: \"rgb(242, 222, 222)\"\r\n    },\r\n    simplex: {\r\n      primary: \"rgba(217, 35, 15, 0.25)\",\r\n      info: \"rgb(217, 237, 247)\",\r\n      success: \"rgb(223, 240, 216)\",\r\n      warning: \"rgb(252, 248, 227)\",\r\n      danger: \"rgb(242, 222, 222)\"\r\n    },\r\n    yeti: {\r\n      primary: \"rgba(0, 140, 186, 0.298039)\",\r\n      info: \"rgb(217, 237, 247)\",\r\n      success: \"rgb(223, 240, 216)\",\r\n      warning: \"rgb(252, 248, 227)\",\r\n      danger: \"rgb(242, 222, 222)\"\r\n    }\r\n  }\r\n  function themeColor(color) {\r\n    return themeColors[_options.theme][color];\r\n  }\r\n\r\n  FlexDashboard.prototype = {\r\n    constructor: FlexDashboard,\r\n    init: init,\r\n    isMobilePhone: isMobilePhone,\r\n    isFillPage: isFillPage,\r\n    themeColor: themeColor\r\n  };\r\n\r\n  return FlexDashboard;\r\n\r\n})();\r\n\r\n// utils\r\nwindow.FlexDashboardUtils = {\r\n  resizableImage: function(img) {\r\n    var src = img.attr('src');\r\n    var url = 'url(\"' + src + '\")';\r\n    img.parent().css('background', url)\r\n                .css('background-size', 'contain')\r\n                .css('background-repeat', 'no-repeat')\r\n                .css('background-position', 'center')\r\n                .addClass('image-container');\r\n  },\r\n  setLocation: function(href) {\r\n    if (history && history.pushState) {\r\n      history.pushState(null, null, href);\r\n    } else {\r\n      window.location.replace(href);\r\n    }\r\n    setTimeout(function() {\r\n        window.scrollTo(0, 0);\r\n    }, 10);\r\n    this.manageActiveNavbarMenu();\r\n  },\r\n  showPage: function(href) {\r\n    $('ul.navbar-nav li a[href=\"' + href + '\"]').tab('show');\r\n    var baseUrl = this.urlWithoutHash(window.location.href);\r\n    var loc = baseUrl + href;\r\n    this.setLocation(loc);\r\n  },\r\n  showLinkedValue: function(href) {\r\n    // check for a page link\r\n    if ($('ul.navbar-nav li a[data-toggle=tab][href=\"' + href + '\"]').length > 0)\r\n      this.showPage(href);\r\n    else\r\n      window.open(href);\r\n  },\r\n  urlWithoutHash: function(url) {\r\n    var hashLoc = url.indexOf('#');\r\n    if (hashLoc != -1)\r\n      return url.substring(0, hashLoc);\r\n    else\r\n      return url;\r\n  },\r\n  urlHash: function(url) {\r\n    var hashLoc = url.indexOf('#');\r\n    if (hashLoc != -1)\r\n      return url.substring(hashLoc);\r\n    else\r\n      return \"\";\r\n  },\r\n  manageActiveNavbarMenu: function () {\r\n    // remove active from anyone currently active\r\n    $('.navbar ul.nav').find('li').removeClass('active');\r\n    // find the active tab\r\n    var activeTab = $('.dashboard-page-wrapper.tab-pane.active');\r\n    if (activeTab.length > 0) {\r\n      var tabId = activeTab.attr('id');\r\n      if (tabId)\r\n        $(\".navbar ul.nav a[href='#\" + tabId + \"']\").parents('li').addClass('active');\r\n    }\r\n  }\r\n};\r\n\r\nwindow.FlexDashboard = new FlexDashboard();\r\n\r\n// empty content\r\nwindow.FlexDashboardComponents.push({\r\n  find: function(container) {\r\n    if (container.find('p').length == 0)\r\n      return container;\r\n    else\r\n      return $();\r\n  }\r\n})\r\n\r\n// plot image\r\nwindow.FlexDashboardComponents.push({\r\n\r\n  find: function(container) {\r\n    return container.children('p')\r\n                    .children('img:only-child');\r\n  },\r\n\r\n  layout: function(title, container, element, fillPage) {\r\n    FlexDashboardUtils.resizableImage(element);\r\n  }\r\n});\r\n\r\n// plot image (figure style)\r\nwindow.FlexDashboardComponents.push({\r\n\r\n  find: function(container) {\r\n    return container.children('div.figure').children('img');\r\n  },\r\n\r\n  layout: function(title, container, element, fillPage) {\r\n    FlexDashboardUtils.resizableImage(element);\r\n  }\r\n});\r\n\r\n// htmlwidget\r\nwindow.FlexDashboardComponents.push({\r\n\r\n  init: function(dashboardContainer) {\r\n    // trigger \"shown\" after initial layout to force static htmlwidgets\r\n    // in runtime: shiny to be resized after the dom has been transformed\r\n    dashboardContainer.on('flexdashboard:layoutcomplete', function(event) {\r\n      setTimeout(function() {\r\n        dashboardContainer.trigger('shown');\r\n      }, 200);\r\n    });\r\n  },\r\n\r\n  find: function(container) {\r\n    return container.children('div[id^=\"htmlwidget-\"],div.html-widget');\r\n  }\r\n});\r\n\r\n// gauge\r\nwindow.FlexDashboardComponents.push({\r\n\r\n  find: function(container) {\r\n    return container.children('div.html-widget.gauge');\r\n  },\r\n\r\n  flex: function(fillPage) {\r\n    return false;\r\n  },\r\n\r\n  layout: function(title, container, element, fillPage) {\r\n\r\n\r\n  }\r\n\r\n});\r\n\r\n// shiny output\r\nwindow.FlexDashboardComponents.push({\r\n  find: function(container) {\r\n    return container.children('div[class^=\"shiny-\"]');\r\n  }\r\n});\r\n\r\n// datatables\r\nwindow.FlexDashboardComponents.push({\r\n  find: function(container) {\r\n    return container.find('.datatables');\r\n  },\r\n  flex: function(fillPage) {\r\n    return fillPage;\r\n  }\r\n});\r\n\r\n// bootstrap table\r\nwindow.FlexDashboardComponents.push({\r\n\r\n  find: function(container) {\r\n    var bsTable = container.find('table.table');\r\n    if (bsTable.length !== 0)\r\n      return bsTable;\r\n    else\r\n      return container.find('tr.header').parent('thead').parent('table');\r\n  },\r\n\r\n  flex: function(fillPage) {\r\n    return fillPage;\r\n  },\r\n\r\n  layout: function(title, container, element, fillPage) {\r\n\r\n    // alias variables\r\n    var bsTable = element;\r\n\r\n    // fixup xtable generated tables with a proper thead\r\n    var headerRow = bsTable.find('tbody > tr:first-child > th').parent();\r\n    if (headerRow.length > 0) {\r\n      var thead = $('<thead><\/thead>');\r\n      bsTable.prepend(thead);\r\n      headerRow.detach().appendTo(thead);\r\n    }\r\n\r\n    // improve appearance\r\n    container.addClass('bootstrap-table');\r\n\r\n    // for fill page provide scrolling w/ sticky headers\r\n    if (fillPage) {\r\n      // force scrollbar on overflow\r\n      container.addClass('flowing-content-shim');\r\n\r\n      // stable table headers when scrolling\r\n      bsTable.stickyTableHeaders({\r\n        scrollableArea: container\r\n      });\r\n    }\r\n  }\r\n});\r\n\r\n// embedded shiny app\r\nwindow.FlexDashboardComponents.push({\r\n\r\n  find: function(container) {\r\n    return container.find('iframe.shiny-frame');\r\n  },\r\n\r\n  flex: function(fillPage) {\r\n    return fillPage;\r\n  },\r\n\r\n  layout: function(title, container, element, fillPage) {\r\n    if (fillPage) {\r\n      element.attr('height', '100%');\r\n    } else {\r\n      // provide default height if necessary\r\n      var height = element.get(0).style.height;\r\n      if (!height)\r\n        height = element.attr('height');\r\n      if (!height)\r\n        element.attr('height', 500);\r\n    }\r\n  }\r\n});\r\n\r\n// shiny fillRow or fillCol\r\nwindow.FlexDashboardComponents.push({\r\n\r\n  find: function(container) {\r\n    return container.find('.flexfill-container');\r\n  },\r\n\r\n  flex: function(fillPage) {\r\n    return fillPage;\r\n  },\r\n\r\n  layout: function(title, container, element, fillPage) {\r\n    if (fillPage)\r\n      element.css('height', '100%');\r\n    else {\r\n      // provide default height if necessary\r\n      var height = element.get(0).style.height;\r\n      if (height === \"100%\" || height === \"auto\" || height === \"initial\" ||\r\n          height === \"inherit\" || !height) {\r\n        element.css('height', 500);\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n// valueBox\r\nwindow.FlexDashboardComponents.push({\r\n\r\n  type: \"custom\",\r\n\r\n  find: function(container) {\r\n    if (container.find('span.value-output, .shiny-valuebox-output').length)\r\n      return container;\r\n    else\r\n      return $();\r\n  },\r\n\r\n  flex: function(fillPage) {\r\n    return false;\r\n  },\r\n\r\n  layout: function(title, container, element, fillPage) {\r\n\r\n    // alias variables\r\n    var chartTitle = title;\r\n    var valueBox = element;\r\n\r\n    // add value-box class to container\r\n    container.addClass('value-box');\r\n\r\n    // value paragraph\r\n    var value = $('<p class=\"value\"><\/p>');\r\n\r\n    // if we have shiny-text-output then just move it in\r\n    var valueOutputSpan = [];\r\n    var shinyOutput = valueBox.find('.shiny-valuebox-output').detach();\r\n    if (shinyOutput.length) {\r\n      valueBox.children().remove();\r\n      shinyOutput.html(\"&mdash;\");\r\n      value.append(shinyOutput);\r\n    } else {\r\n      // extract the value (remove leading vector index)\r\n      var chartValue = valueBox.text().trim();\r\n      chartValue = chartValue.replace(\"[1] \", \"\");\r\n      valueOutputSpan = valueBox.find('span.value-output').detach();\r\n      valueBox.children().remove();\r\n      value.text(chartValue);\r\n    }\r\n\r\n    // caption\r\n    var caption = $('<p class=\"caption\"><\/p>');\r\n    caption.append(chartTitle);\r\n\r\n    // build inner div for value box and add it\r\n    var inner = $('<div class=\"inner\"><\/div>');\r\n    inner.append(value);\r\n    inner.append(caption);\r\n    valueBox.append(inner);\r\n\r\n    // add icon if specified\r\n    var icon = $('<div class=\"icon\"><i><\/i><\/div>');\r\n    valueBox.append(icon);\r\n    function setIcon(chartIcon) {\r\n      var iconLib = \"\";\r\n      var iconSplit = chartIcon.split(\" \");\r\n      if (iconSplit.length > 1) {\r\n        iconLib = iconSplit[0];\r\n        chartIcon = iconSplit.slice(1).join(\" \");\r\n      } else {\r\n        var components = chartIcon.split(\"-\");\r\n        if (components.length > 1)\r\n          iconLib = components[0];\r\n      }\r\n      icon.children('i').attr('class', iconLib + ' ' + chartIcon);\r\n    }\r\n    var chartIcon = valueBox.attr('data-icon');\r\n    if (chartIcon)\r\n      setIcon(chartIcon);\r\n\r\n    // set color based on data-background if necessary\r\n    var dataBackground = valueBox.attr('data-background');\r\n    if (dataBackground)\r\n      valueBox.css('background-color', bgColor);\r\n    else {\r\n      // default to bg-primary if no other background is specified\r\n      if (!valueBox.hasClass('bg-primary') &&\r\n          !valueBox.hasClass('bg-info') &&\r\n          !valueBox.hasClass('bg-warning') &&\r\n          !valueBox.hasClass('bg-success') &&\r\n          !valueBox.hasClass('bg-danger')) {\r\n        valueBox.addClass('bg-primary');\r\n      }\r\n    }\r\n\r\n    // handle data attributes in valueOutputSpan\r\n    function handleValueOutput(valueOutput) {\r\n\r\n      // caption\r\n      var dataCaption = valueOutput.attr('data-caption');\r\n      if (dataCaption)\r\n        caption.html(dataCaption);\r\n\r\n      // icon\r\n      var dataIcon = valueOutput.attr('data-icon');\r\n      if (dataIcon)\r\n        setIcon(dataIcon);\r\n\r\n      // color\r\n      var dataColor = valueOutput.attr('data-color');\r\n      if (dataColor) {\r\n        if (dataColor.indexOf('bg-') === 0) {\r\n          valueBox.css('background-color', '');\r\n          if (!valueBox.hasClass(dataColor)) {\r\n             valueBox.removeClass('bg-primary bg-info bg-warning bg-danger bg-success');\r\n             valueBox.addClass(dataColor);\r\n          }\r\n        } else {\r\n          valueBox.removeClass('bg-primary bg-info bg-warning bg-danger bg-success');\r\n          valueBox.css('background-color', dataColor);\r\n        }\r\n      }\r\n\r\n      // url\r\n      var dataHref = valueOutput.attr('data-href');\r\n      if (dataHref) {\r\n        valueBox.addClass('linked-value');\r\n        valueBox.off('click.value-box');\r\n        valueBox.on('click.value-box', function(e) {\r\n          window.FlexDashboardUtils.showLinkedValue(dataHref);\r\n        });\r\n      }\r\n    }\r\n\r\n    // check for a valueOutputSpan\r\n    if (valueOutputSpan.length > 0) {\r\n      handleValueOutput(valueOutputSpan);\r\n    }\r\n\r\n    // if we have a shinyOutput then bind a listener to handle\r\n    // new valueOutputSpan values\r\n    shinyOutput.on('shiny:value',\r\n      function(event) {\r\n        var element = $(event.target);\r\n        setTimeout(function() {\r\n          var valueOutputSpan = element.find('span.value-output');\r\n          if (valueOutputSpan.length > 0)\r\n            handleValueOutput(valueOutputSpan);\r\n        }, 10);\r\n      }\r\n    );\r\n  }\r\n});\r\n\r\n\r\n\r\nSummary\r\n\r\nRow\r\n\r\nconfirmed\r\n\r\n\r\n\r\n1,013,438 \r\n\r\n\r\ndeath\r\n\r\n\r\n\r\n7,994 (0.8%) Row â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€“\r\n\r\n\r\nDaily cumulative cases by type (Malaysia)\r\n\r\n\r\n\r\n\r\n{\"x\":{\"visdat\":{\"57bc52f949eb\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"57bc52f949eb\",\"attrs\":{\"57bc52f949eb\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"y\":{},\"type\":\"scatter\",\"mode\":\"lines+markers\",\"name\":\"Confirmed\",\"line\":{\"color\":\"#1f77b4\"},\"marker\":{\"color\":\"#1f77b4\"},\"inherit\":true},\"57bc52f949eb.1\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"y\":{},\"type\":\"scatter\",\"mode\":\"lines+markers\",\"name\":\"Death\",\"line\":{\"color\":\"red\"},\"marker\":{\"color\":\"red\"},\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"annotations\":[{\"text\":\"First case\",\"x\":\"2020-02-04\",\"y\":1,\"xref\":\"x\",\"yref\":\"y\",\"arrowhead\":5,\"arrowhead.1\":3,\"arrowsize\":1,\"showarrow\":true,\"ax\":-10,\"ay\":-90},{\"text\":\"First death\",\"x\":\"2020-03-11\",\"y\":3,\"xref\":\"x\",\"yref\":\"y\",\"arrowhead\":5,\"arrowhead.1\":3,\"arrowsize\":1,\"showarrow\":true,\"ax\":-90,\"ay\":-90},{\"text\":\"New containment  measures\",\"x\":\"2020-03-18\",\"y\":14,\"xref\":\"x\",\"yref\":\"y\",\"arrowhead\":5,\"arrowhead.1\":3,\"arrowsize\":1,\"showarrow\":true,\"ax\":-10,\"ay\":-90}],\"title\":\"\",\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Cumulative number of cases\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Date\"},\"legend\":{\"x\":0.1,\"y\":0.9},\"hovermode\":\"compare\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"showSendToCloud\":false},\"data\":[{\"x\":[\"2020-01-22\",\"2020-01-23\",\"2020-01-24\",\"2020-01-25\",\"2020-01-26\",\"2020-01-27\",\"2020-01-28\",\"2020-01-29\",\"2020-01-30\",\"2020-01-31\",\"2020-02-01\",\"2020-02-02\",\"2020-02-03\",\"2020-02-04\",\"2020-02-05\",\"2020-02-06\",\"2020-02-07\",\"2020-02-08\",\"2020-02-09\",\"2020-02-10\",\"2020-02-11\",\"2020-02-12\",\"2020-02-13\",\"2020-02-14\",\"2020-02-15\",\"2020-02-16\",\"2020-02-17\",\"2020-02-18\",\"2020-02-19\",\"2020-02-20\",\"2020-02-21\",\"2020-02-22\",\"2020-02-23\",\"2020-02-24\",\"2020-02-25\",\"2020-02-26\",\"2020-02-27\",\"2020-02-28\",\"2020-02-29\",\"2020-03-01\",\"2020-03-02\",\"2020-03-03\",\"2020-03-04\",\"2020-03-05\",\"2020-03-06\",\"2020-03-07\",\"2020-03-08\",\"2020-03-09\",\"2020-03-10\",\"2020-03-11\",\"2020-03-12\",\"2020-03-13\",\"2020-03-14\",\"2020-03-15\",\"2020-03-16\",\"2020-03-17\",\"2020-03-18\",\"2020-03-19\",\"2020-03-20\",\"2020-03-21\",\"2020-03-22\",\"2020-03-23\",\"2020-03-24\",\"2020-03-25\",\"2020-03-26\",\"2020-03-27\",\"2020-03-28\",\"2020-03-29\",\"2020-03-30\",\"2020-03-31\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-10\",\"2020-04-11\",\"2020-04-12\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-18\",\"2020-04-19\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-25\",\"2020-04-26\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-02\",\"2020-05-03\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-09\",\"2020-05-10\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-16\",\"2020-05-17\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-23\",\"2020-05-24\",\"2020-05-25\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-05-30\",\"2020-05-31\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-06\",\"2020-06-07\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-13\",\"2020-06-14\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-20\",\"2020-06-21\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-27\",\"2020-06-28\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-11\",\"2020-07-12\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-18\",\"2020-07-19\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-25\",\"2020-07-26\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-01\",\"2020-08-02\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-08\",\"2020-08-09\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-15\",\"2020-08-16\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-22\",\"2020-08-23\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-29\",\"2020-08-30\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-05\",\"2020-09-06\",\"2020-09-07\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-12\",\"2020-09-13\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-19\",\"2020-09-20\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-26\",\"2020-09-27\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-03\",\"2020-10-04\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-10\",\"2020-10-11\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-17\",\"2020-10-18\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-24\",\"2020-10-25\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-10-31\",\"2020-11-01\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-07\",\"2020-11-08\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-14\",\"2020-11-15\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-21\",\"2020-11-22\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-26\",\"2020-11-27\",\"2020-11-28\",\"2020-11-29\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-05\",\"2020-12-06\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-12\",\"2020-12-13\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-19\",\"2020-12-20\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-25\",\"2020-12-26\",\"2020-12-27\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\",\"2021-01-01\",\"2021-01-02\",\"2021-01-03\",\"2021-01-04\",\"2021-01-05\",\"2021-01-06\",\"2021-01-07\",\"2021-01-08\",\"2021-01-09\",\"2021-01-10\",\"2021-01-11\",\"2021-01-12\",\"2021-01-13\",\"2021-01-14\",\"2021-01-15\",\"2021-01-16\",\"2021-01-17\",\"2021-01-18\",\"2021-01-19\",\"2021-01-20\",\"2021-01-21\",\"2021-01-22\",\"2021-01-23\",\"2021-01-24\",\"2021-01-25\",\"2021-01-26\",\"2021-01-27\",\"2021-01-28\",\"2021-01-29\",\"2021-01-30\",\"2021-01-31\",\"2021-02-01\",\"2021-02-02\",\"2021-02-03\",\"2021-02-04\",\"2021-02-05\",\"2021-02-06\",\"2021-02-07\",\"2021-02-08\",\"2021-02-09\",\"2021-02-10\",\"2021-02-11\",\"2021-02-12\",\"2021-02-13\",\"2021-02-14\",\"2021-02-15\",\"2021-02-16\",\"2021-02-17\",\"2021-02-18\",\"2021-02-19\",\"2021-02-20\",\"2021-02-21\",\"2021-02-22\",\"2021-02-23\",\"2021-02-24\",\"2021-02-25\",\"2021-02-26\",\"2021-02-27\",\"2021-02-28\",\"2021-03-01\",\"2021-03-02\",\"2021-03-03\",\"2021-03-04\",\"2021-03-05\",\"2021-03-06\",\"2021-03-07\",\"2021-03-08\",\"2021-03-09\",\"2021-03-10\",\"2021-03-11\",\"2021-03-12\",\"2021-03-13\",\"2021-03-14\",\"2021-03-15\",\"2021-03-16\",\"2021-03-17\",\"2021-03-18\",\"2021-03-19\",\"2021-03-20\",\"2021-03-21\",\"2021-03-22\",\"2021-03-23\",\"2021-03-24\",\"2021-03-25\",\"2021-03-26\",\"2021-03-27\",\"2021-03-28\",\"2021-03-29\",\"2021-03-30\",\"2021-03-31\",\"2021-04-01\",\"2021-04-02\",\"2021-04-03\",\"2021-04-04\",\"2021-04-05\",\"2021-04-06\",\"2021-04-07\",\"2021-04-08\",\"2021-04-09\",\"2021-04-10\",\"2021-04-11\",\"2021-04-12\",\"2021-04-13\",\"2021-04-14\",\"2021-04-15\",\"2021-04-16\",\"2021-04-17\",\"2021-04-18\",\"2021-04-19\",\"2021-04-20\",\"2021-04-21\",\"2021-04-22\",\"2021-04-23\",\"2021-04-24\",\"2021-04-25\",\"2021-04-26\",\"2021-04-27\",\"2021-04-28\",\"2021-04-29\",\"2021-04-30\",\"2021-05-01\",\"2021-05-02\",\"2021-05-03\",\"2021-05-04\",\"2021-05-05\",\"2021-05-06\",\"2021-05-07\",\"2021-05-08\",\"2021-05-09\",\"2021-05-10\",\"2021-05-11\",\"2021-05-12\",\"2021-05-13\",\"2021-05-14\",\"2021-05-15\",\"2021-05-16\",\"2021-05-17\",\"2021-05-18\",\"2021-05-19\",\"2021-05-20\",\"2021-05-21\",\"2021-05-22\",\"2021-05-23\",\"2021-05-24\",\"2021-05-25\",\"2021-05-26\",\"2021-05-27\",\"2021-05-28\",\"2021-05-29\",\"2021-05-30\",\"2021-05-31\",\"2021-06-01\",\"2021-06-02\",\"2021-06-03\",\"2021-06-04\",\"2021-06-05\",\"2021-06-06\",\"2021-06-07\",\"2021-06-08\",\"2021-06-09\",\"2021-06-10\",\"2021-06-11\",\"2021-06-12\",\"2021-06-13\",\"2021-06-14\",\"2021-06-15\",\"2021-06-16\",\"2021-06-17\",\"2021-06-18\",\"2021-06-19\",\"2021-06-20\",\"2021-06-21\",\"2021-06-22\",\"2021-06-23\",\"2021-06-24\",\"2021-06-25\",\"2021-06-26\",\"2021-06-27\",\"2021-06-28\",\"2021-06-29\",\"2021-06-30\",\"2021-07-01\",\"2021-07-02\",\"2021-07-03\",\"2021-07-04\",\"2021-07-05\",\"2021-07-06\",\"2021-07-07\",\"2021-07-08\",\"2021-07-09\",\"2021-07-10\",\"2021-07-11\",\"2021-07-12\",\"2021-07-13\",\"2021-07-14\",\"2021-07-15\",\"2021-07-16\",\"2021-07-17\",\"2021-07-18\",\"2021-07-19\",\"2021-07-20\",\"2021-07-21\",\"2021-07-22\",\"2021-07-23\",\"2021-07-24\",\"2021-07-25\"],\"y\":[0,0,0,3,4,4,4,7,8,8,8,8,8,10,12,12,12,16,16,18,18,18,19,19,22,22,22,22,22,22,22,22,22,22,22,22,23,23,25,29,29,36,50,50,83,93,99,117,129,149,149,197,238,428,566,673,790,900,1030,1183,1306,1518,1624,1796,2031,2161,2320,2470,2626,2766,2908,3116,3333,3483,3662,3793,3963,4119,4228,4346,4530,4683,4817,4987,5072,5182,5251,5305,5389,5425,5482,5532,5603,5691,5742,5780,5820,5851,5945,6002,6071,6176,6298,6353,6383,6428,6467,6535,6589,6656,6726,6742,6779,6819,6855,6872,6894,6941,6978,7009,7059,7137,7185,7245,7417,7604,7619,7629,7732,7762,7819,7857,7877,7970,8247,8266,8303,8322,8329,8336,8338,8369,8402,8445,8453,8494,8505,8515,8529,8535,8556,8572,8587,8590,8596,8600,8606,8616,8634,8637,8639,8640,8643,8648,8658,8663,8668,8674,8677,8683,8696,8704,8718,8725,8729,8734,8737,8755,8764,8779,8800,8815,8831,8840,8861,8884,8897,8904,8943,8956,8964,8976,8985,8999,9001,9002,9023,9038,9063,9070,9083,9094,9103,9114,9129,9149,9175,9200,9212,9219,9235,9240,9249,9257,9267,9274,9285,9291,9296,9306,9317,9334,9340,9354,9360,9374,9385,9391,9397,9459,9559,9583,9628,9810,9868,9915,9946,9969,10031,10052,10147,10167,10219,10276,10358,10505,10576,10687,10769,10919,11034,11135,11224,11484,11771,12088,12381,12813,13504,13993,14368,14722,15096,15657,16220,16880,17540,18129,18758,19627,20498,21363,22225,22957,23804,24514,25742,26565,27805,28640,29441,30090,30889,31548,32505,33339,34393,35425,36434,38189,39357,40209,41181,42050,42872,43791,45095,46209,47417,48520,49730,50390,51680,52638,53679,54775,56659,58847,59817,60752,61861,63176,64485,65697,67169,68020,69095,70236,71359,72694,74294,75306,76265,78499,80309,82246,83475,84846,86618,87913,89133,90816,91969,93309,95327,97389,98737,100318,101565,103900,105096,106690,108615,110485,113010,115078,117373,119077,120818,122845,125438,128465,131108,133559,135992,138224,141533,144518,147855,151066,155095,158434,161740,165371,169379,172549,176180,180455,183801,186849,190434,194114,198208,203933,209661,214959,219173,222628,226912,231483,234874,238721,242452,245552,248316,251604,254988,258306,261805,264269,266445,269165,272163,274875,277811,280272,283569,285761,288229,291774,293698,295951,298315,300752,302580,304135,305880,307943,310097,311777,313460,314989,316269,317717,319364,320939,322409,323763,324971,326034,327253,328466,330042,331713,333040,334156,335540,336808,338168,339443,340642,341944,342885,344018,345500,346678,347972,349610,350959,352029,353329,354468,355753,357607,359117,360856,362173,363940,365829,367977,370528,372859,375054,377132,379473,381813,384688,387535,390252,392942,395718,398451,401593,404925,408713,411594,415012,417512,420632,424376,427927,432425,436944,440677,444484,448457,453222,458077,462190,466330,470110,474556,479421,485496,492302,498795,505115,512091,518600,525889,533367,541224,549514,558534,565533,572357,579462,587165,595374,603122,610574,616815,622086,627652,633891,639562,646411,652204,657508,662457,667876,673026,678764,685204,691115,696408,701019,705762,711006,716847,722659,728462,734048,739266,745703,751979,758967,765949,772607,778652,785039,792693,799790,808658,817838,827191,836296,844870,855949,867567,880782,893323,905851,916561,927533,939899,951884,964918,980491,996393,1013438],\"type\":\"scatter\",\"mode\":\"lines+markers\",\"name\":\"Confirmed\",\"line\":{\"color\":\"#1f77b4\"},\"marker\":{\"color\":\"#1f77b4\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"2020-01-22\",\"2020-01-23\",\"2020-01-24\",\"2020-01-25\",\"2020-01-26\",\"2020-01-27\",\"2020-01-28\",\"2020-01-29\",\"2020-01-30\",\"2020-01-31\",\"2020-02-01\",\"2020-02-02\",\"2020-02-03\",\"2020-02-04\",\"2020-02-05\",\"2020-02-06\",\"2020-02-07\",\"2020-02-08\",\"2020-02-09\",\"2020-02-10\",\"2020-02-11\",\"2020-02-12\",\"2020-02-13\",\"2020-02-14\",\"2020-02-15\",\"2020-02-16\",\"2020-02-17\",\"2020-02-18\",\"2020-02-19\",\"2020-02-20\",\"2020-02-21\",\"2020-02-22\",\"2020-02-23\",\"2020-02-24\",\"2020-02-25\",\"2020-02-26\",\"2020-02-27\",\"2020-02-28\",\"2020-02-29\",\"2020-03-01\",\"2020-03-02\",\"2020-03-03\",\"2020-03-04\",\"2020-03-05\",\"2020-03-06\",\"2020-03-07\",\"2020-03-08\",\"2020-03-09\",\"2020-03-10\",\"2020-03-11\",\"2020-03-12\",\"2020-03-13\",\"2020-03-14\",\"2020-03-15\",\"2020-03-16\",\"2020-03-17\",\"2020-03-18\",\"2020-03-19\",\"2020-03-20\",\"2020-03-21\",\"2020-03-22\",\"2020-03-23\",\"2020-03-24\",\"2020-03-25\",\"2020-03-26\",\"2020-03-27\",\"2020-03-28\",\"2020-03-29\",\"2020-03-30\",\"2020-03-31\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-10\",\"2020-04-11\",\"2020-04-12\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-18\",\"2020-04-19\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-25\",\"2020-04-26\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-02\",\"2020-05-03\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-09\",\"2020-05-10\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-16\",\"2020-05-17\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-23\",\"2020-05-24\",\"2020-05-25\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-05-30\",\"2020-05-31\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-06\",\"2020-06-07\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-13\",\"2020-06-14\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-20\",\"2020-06-21\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-27\",\"2020-06-28\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-11\",\"2020-07-12\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-18\",\"2020-07-19\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-25\",\"2020-07-26\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-01\",\"2020-08-02\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-08\",\"2020-08-09\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-15\",\"2020-08-16\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-22\",\"2020-08-23\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-29\",\"2020-08-30\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-05\",\"2020-09-06\",\"2020-09-07\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-12\",\"2020-09-13\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-19\",\"2020-09-20\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-26\",\"2020-09-27\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-03\",\"2020-10-04\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-10\",\"2020-10-11\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-17\",\"2020-10-18\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-24\",\"2020-10-25\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-10-31\",\"2020-11-01\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-07\",\"2020-11-08\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-14\",\"2020-11-15\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-21\",\"2020-11-22\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-26\",\"2020-11-27\",\"2020-11-28\",\"2020-11-29\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-05\",\"2020-12-06\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-12\",\"2020-12-13\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-19\",\"2020-12-20\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-25\",\"2020-12-26\",\"2020-12-27\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\",\"2021-01-01\",\"2021-01-02\",\"2021-01-03\",\"2021-01-04\",\"2021-01-05\",\"2021-01-06\",\"2021-01-07\",\"2021-01-08\",\"2021-01-09\",\"2021-01-10\",\"2021-01-11\",\"2021-01-12\",\"2021-01-13\",\"2021-01-14\",\"2021-01-15\",\"2021-01-16\",\"2021-01-17\",\"2021-01-18\",\"2021-01-19\",\"2021-01-20\",\"2021-01-21\",\"2021-01-22\",\"2021-01-23\",\"2021-01-24\",\"2021-01-25\",\"2021-01-26\",\"2021-01-27\",\"2021-01-28\",\"2021-01-29\",\"2021-01-30\",\"2021-01-31\",\"2021-02-01\",\"2021-02-02\",\"2021-02-03\",\"2021-02-04\",\"2021-02-05\",\"2021-02-06\",\"2021-02-07\",\"2021-02-08\",\"2021-02-09\",\"2021-02-10\",\"2021-02-11\",\"2021-02-12\",\"2021-02-13\",\"2021-02-14\",\"2021-02-15\",\"2021-02-16\",\"2021-02-17\",\"2021-02-18\",\"2021-02-19\",\"2021-02-20\",\"2021-02-21\",\"2021-02-22\",\"2021-02-23\",\"2021-02-24\",\"2021-02-25\",\"2021-02-26\",\"2021-02-27\",\"2021-02-28\",\"2021-03-01\",\"2021-03-02\",\"2021-03-03\",\"2021-03-04\",\"2021-03-05\",\"2021-03-06\",\"2021-03-07\",\"2021-03-08\",\"2021-03-09\",\"2021-03-10\",\"2021-03-11\",\"2021-03-12\",\"2021-03-13\",\"2021-03-14\",\"2021-03-15\",\"2021-03-16\",\"2021-03-17\",\"2021-03-18\",\"2021-03-19\",\"2021-03-20\",\"2021-03-21\",\"2021-03-22\",\"2021-03-23\",\"2021-03-24\",\"2021-03-25\",\"2021-03-26\",\"2021-03-27\",\"2021-03-28\",\"2021-03-29\",\"2021-03-30\",\"2021-03-31\",\"2021-04-01\",\"2021-04-02\",\"2021-04-03\",\"2021-04-04\",\"2021-04-05\",\"2021-04-06\",\"2021-04-07\",\"2021-04-08\",\"2021-04-09\",\"2021-04-10\",\"2021-04-11\",\"2021-04-12\",\"2021-04-13\",\"2021-04-14\",\"2021-04-15\",\"2021-04-16\",\"2021-04-17\",\"2021-04-18\",\"2021-04-19\",\"2021-04-20\",\"2021-04-21\",\"2021-04-22\",\"2021-04-23\",\"2021-04-24\",\"2021-04-25\",\"2021-04-26\",\"2021-04-27\",\"2021-04-28\",\"2021-04-29\",\"2021-04-30\",\"2021-05-01\",\"2021-05-02\",\"2021-05-03\",\"2021-05-04\",\"2021-05-05\",\"2021-05-06\",\"2021-05-07\",\"2021-05-08\",\"2021-05-09\",\"2021-05-10\",\"2021-05-11\",\"2021-05-12\",\"2021-05-13\",\"2021-05-14\",\"2021-05-15\",\"2021-05-16\",\"2021-05-17\",\"2021-05-18\",\"2021-05-19\",\"2021-05-20\",\"2021-05-21\",\"2021-05-22\",\"2021-05-23\",\"2021-05-24\",\"2021-05-25\",\"2021-05-26\",\"2021-05-27\",\"2021-05-28\",\"2021-05-29\",\"2021-05-30\",\"2021-05-31\",\"2021-06-01\",\"2021-06-02\",\"2021-06-03\",\"2021-06-04\",\"2021-06-05\",\"2021-06-06\",\"2021-06-07\",\"2021-06-08\",\"2021-06-09\",\"2021-06-10\",\"2021-06-11\",\"2021-06-12\",\"2021-06-13\",\"2021-06-14\",\"2021-06-15\",\"2021-06-16\",\"2021-06-17\",\"2021-06-18\",\"2021-06-19\",\"2021-06-20\",\"2021-06-21\",\"2021-06-22\",\"2021-06-23\",\"2021-06-24\",\"2021-06-25\",\"2021-06-26\",\"2021-06-27\",\"2021-06-28\",\"2021-06-29\",\"2021-06-30\",\"2021-07-01\",\"2021-07-02\",\"2021-07-03\",\"2021-07-04\",\"2021-07-05\",\"2021-07-06\",\"2021-07-07\",\"2021-07-08\",\"2021-07-09\",\"2021-07-10\",\"2021-07-11\",\"2021-07-12\",\"2021-07-13\",\"2021-07-14\",\"2021-07-15\",\"2021-07-16\",\"2021-07-17\",\"2021-07-18\",\"2021-07-19\",\"2021-07-20\",\"2021-07-21\",\"2021-07-22\",\"2021-07-23\",\"2021-07-24\",\"2021-07-25\"],\"y\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,3,4,10,14,16,20,23,26,27,35,37,43,45,50,53,57,61,62,63,65,67,70,73,76,77,82,83,84,86,88,89,89,92,93,95,96,98,98,99,100,100,102,103,103,105,105,106,107,107,107,108,108,109,109,111,112,112,113,113,113,114,114,114,115,115,115,115,115,115,115,115,115,115,115,115,115,115,116,117,117,117,117,118,118,119,120,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,124,124,124,124,124,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,126,127,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,130,130,130,130,133,133,133,133,134,134,134,136,136,136,137,137,137,141,141,146,152,155,157,159,163,167,170,176,180,187,190,193,199,204,214,221,229,236,238,246,246,249,249,249,251,263,271,277,279,282,286,294,300,302,303,304,306,309,313,318,322,326,329,332,335,337,341,345,348,350,354,357,360,363,365,376,376,380,382,384,388,393,396,402,411,415,419,422,429,432,432,433,437,438,439,444,446,449,451,452,455,457,463,471,474,483,494,501,509,513,521,537,542,551,555,559,563,578,586,594,601,605,619,630,642,660,667,678,689,700,707,717,733,746,760,770,791,809,826,845,857,872,896,909,923,936,953,958,965,975,983,1005,1030,1043,1051,1056,1062,1076,1088,1100,1111,1121,1130,1135,1141,1148,1153,1159,1166,1169,1177,1186,1191,1200,1203,1206,1210,1213,1218,1220,1223,1225,1229,1233,1238,1244,1246,1248,1249,1251,1255,1260,1265,1272,1278,1283,1286,1288,1295,1300,1304,1308,1313,1321,1329,1333,1345,1353,1363,1365,1370,1378,1386,1389,1400,1407,1415,1426,1436,1449,1462,1477,1492,1506,1521,1533,1551,1574,1591,1610,1632,1657,1683,1700,1722,1761,1788,1822,1866,1902,1947,1994,2040,2099,2149,2199,2248,2309,2369,2432,2491,2552,2650,2729,2796,2867,2993,3096,3182,3291,3378,3460,3536,3611,3684,3768,3844,3908,3968,4069,4142,4202,4276,4348,4408,4477,4554,4637,4721,4803,4884,4944,5001,5108,5170,5254,5327,5434,5497,5574,5677,5768,5903,5980,6067,6158,6260,6385,6503,6613,6728,6866,7019,7148,7241,7440,7574,7718,7902,7994],\"type\":\"scatter\",\"mode\":\"lines+markers\",\"name\":\"Death\",\"line\":{\"color\":\"red\"},\"marker\":{\"color\":\"red\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\r\n\r\n\r\n\r\nComparison\r\n\r\nColumn\r\n\r\nDaily new cases\r\n\r\n\r\n\r\n\r\n{\"x\":{\"visdat\":{\"57bc72964e76\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"57bc72964e76\",\"attrs\":{\"57bc72964e76\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"y\":{},\"type\":\"scatter\",\"mode\":\"lines+markers\",\"name\":\"Malaysia\",\"inherit\":true},\"57bc72964e76.1\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"y\":{},\"type\":\"scatter\",\"mode\":\"lines+markers\",\"name\":\"Singapore\",\"inherit\":true},\"57bc72964e76.2\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"y\":{},\"type\":\"scatter\",\"mode\":\"lines+markers\",\"name\":\"Brunei\",\"inherit\":true},\"57bc72964e76.3\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"y\":{},\"type\":\"scatter\",\"mode\":\"lines+markers\",\"name\":\"Thailand\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":10,\"l\":60,\"t\":10,\"r\":10,\"pad\":2},\"title\":\"\",\"legend\":{\"x\":0.1,\"y\":0.9},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Number of new cases\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Date\"},\"hovermode\":\"compare\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"showSendToCloud\":false},\"data\":[{\"x\":[\"2020-02-29\",\"2020-03-01\",\"2020-03-02\",\"2020-03-03\",\"2020-03-04\",\"2020-03-05\",\"2020-03-06\",\"2020-03-07\",\"2020-03-08\",\"2020-03-09\",\"2020-03-10\",\"2020-03-11\",\"2020-03-12\",\"2020-03-13\",\"2020-03-14\",\"2020-03-15\",\"2020-03-16\",\"2020-03-17\",\"2020-03-18\",\"2020-03-19\",\"2020-03-20\",\"2020-03-21\",\"2020-03-22\",\"2020-03-23\",\"2020-03-24\",\"2020-03-25\",\"2020-03-26\",\"2020-03-27\",\"2020-03-28\",\"2020-03-29\",\"2020-03-30\",\"2020-03-31\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-10\",\"2020-04-11\",\"2020-04-12\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-18\",\"2020-04-19\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-25\",\"2020-04-26\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-02\",\"2020-05-03\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-09\",\"2020-05-10\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-16\",\"2020-05-17\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-23\",\"2020-05-24\",\"2020-05-25\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-05-30\",\"2020-05-31\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-06\",\"2020-06-07\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-13\",\"2020-06-14\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-20\",\"2020-06-21\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-27\",\"2020-06-28\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-11\",\"2020-07-12\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-18\",\"2020-07-19\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-25\",\"2020-07-26\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-01\",\"2020-08-02\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-08\",\"2020-08-09\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-15\",\"2020-08-16\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-22\",\"2020-08-23\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-29\",\"2020-08-30\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-05\",\"2020-09-06\",\"2020-09-07\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-12\",\"2020-09-13\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-19\",\"2020-09-20\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-26\",\"2020-09-27\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-03\",\"2020-10-04\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-10\",\"2020-10-11\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-17\",\"2020-10-18\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-24\",\"2020-10-25\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-10-31\",\"2020-11-01\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-07\",\"2020-11-08\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-14\",\"2020-11-15\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-21\",\"2020-11-22\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-26\",\"2020-11-27\",\"2020-11-28\",\"2020-11-29\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-05\",\"2020-12-06\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-12\",\"2020-12-13\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-19\",\"2020-12-20\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-25\",\"2020-12-26\",\"2020-12-27\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\",\"2021-01-01\",\"2021-01-02\",\"2021-01-03\",\"2021-01-04\",\"2021-01-05\",\"2021-01-06\",\"2021-01-07\",\"2021-01-08\",\"2021-01-09\",\"2021-01-10\",\"2021-01-11\",\"2021-01-12\",\"2021-01-13\",\"2021-01-14\",\"2021-01-15\",\"2021-01-16\",\"2021-01-17\",\"2021-01-18\",\"2021-01-19\",\"2021-01-20\",\"2021-01-21\",\"2021-01-22\",\"2021-01-23\",\"2021-01-24\",\"2021-01-25\",\"2021-01-26\",\"2021-01-27\",\"2021-01-28\",\"2021-01-29\",\"2021-01-30\",\"2021-01-31\",\"2021-02-01\",\"2021-02-02\",\"2021-02-03\",\"2021-02-04\",\"2021-02-05\",\"2021-02-06\",\"2021-02-07\",\"2021-02-08\",\"2021-02-09\",\"2021-02-10\",\"2021-02-11\",\"2021-02-12\",\"2021-02-13\",\"2021-02-14\",\"2021-02-15\",\"2021-02-16\",\"2021-02-17\",\"2021-02-18\",\"2021-02-19\",\"2021-02-20\",\"2021-02-21\",\"2021-02-22\",\"2021-02-23\",\"2021-02-24\",\"2021-02-25\",\"2021-02-26\",\"2021-02-27\",\"2021-02-28\",\"2021-03-01\",\"2021-03-02\",\"2021-03-03\",\"2021-03-04\",\"2021-03-05\",\"2021-03-06\",\"2021-03-07\",\"2021-03-08\",\"2021-03-09\",\"2021-03-10\",\"2021-03-11\",\"2021-03-12\",\"2021-03-13\",\"2021-03-14\",\"2021-03-15\",\"2021-03-16\",\"2021-03-17\",\"2021-03-18\",\"2021-03-19\",\"2021-03-20\",\"2021-03-21\",\"2021-03-22\",\"2021-03-23\",\"2021-03-24\",\"2021-03-25\",\"2021-03-26\",\"2021-03-27\",\"2021-03-28\",\"2021-03-29\",\"2021-03-30\",\"2021-03-31\",\"2021-04-01\",\"2021-04-02\",\"2021-04-03\",\"2021-04-04\",\"2021-04-05\",\"2021-04-06\",\"2021-04-07\",\"2021-04-08\",\"2021-04-09\",\"2021-04-10\",\"2021-04-11\",\"2021-04-12\",\"2021-04-13\",\"2021-04-14\",\"2021-04-15\",\"2021-04-16\",\"2021-04-17\",\"2021-04-18\",\"2021-04-19\",\"2021-04-20\",\"2021-04-21\",\"2021-04-22\",\"2021-04-23\",\"2021-04-24\",\"2021-04-25\",\"2021-04-26\",\"2021-04-27\",\"2021-04-28\",\"2021-04-29\",\"2021-04-30\",\"2021-05-01\",\"2021-05-02\",\"2021-05-03\",\"2021-05-04\",\"2021-05-05\",\"2021-05-06\",\"2021-05-07\",\"2021-05-08\",\"2021-05-09\",\"2021-05-10\",\"2021-05-11\",\"2021-05-12\",\"2021-05-13\",\"2021-05-14\",\"2021-05-15\",\"2021-05-16\",\"2021-05-17\",\"2021-05-18\",\"2021-05-19\",\"2021-05-20\",\"2021-05-21\",\"2021-05-22\",\"2021-05-23\",\"2021-05-24\",\"2021-05-25\",\"2021-05-26\",\"2021-05-27\",\"2021-05-28\",\"2021-05-29\",\"2021-05-30\",\"2021-05-31\",\"2021-06-01\",\"2021-06-02\",\"2021-06-03\",\"2021-06-04\",\"2021-06-05\",\"2021-06-06\",\"2021-06-07\",\"2021-06-08\",\"2021-06-09\",\"2021-06-10\",\"2021-06-11\",\"2021-06-12\",\"2021-06-13\",\"2021-06-14\",\"2021-06-15\",\"2021-06-16\",\"2021-06-17\",\"2021-06-18\",\"2021-06-19\",\"2021-06-20\",\"2021-06-21\",\"2021-06-22\",\"2021-06-23\",\"2021-06-24\",\"2021-06-25\",\"2021-06-26\",\"2021-06-27\",\"2021-06-28\",\"2021-06-29\",\"2021-06-30\",\"2021-07-01\",\"2021-07-02\",\"2021-07-03\",\"2021-07-04\",\"2021-07-05\",\"2021-07-06\",\"2021-07-07\",\"2021-07-08\",\"2021-07-09\",\"2021-07-10\",\"2021-07-11\",\"2021-07-12\",\"2021-07-13\",\"2021-07-14\",\"2021-07-15\",\"2021-07-16\",\"2021-07-17\",\"2021-07-18\",\"2021-07-19\",\"2021-07-20\",\"2021-07-21\",\"2021-07-22\",\"2021-07-23\",\"2021-07-24\",\"2021-07-25\"],\"y\":[0,0,1,0,0,1,0,0,0,10,3,1,8,3,22,83,100,63,155,47,229,46,99,97,91,138,172,122,102,120,221,180,303,265,132,339,609,269,228,226,206,316,219,266,341,546,536,106,613,710,70,1147,511,1079,785,783,605,587,697,913,1292,1297,989,981,857,1108,2024,571,1791,2301,1598,1747,2255,962,490,3011,0,1352,1974,1841,1932,2193,2603,1743,2164,1748,1356,1446,2076,2801,2429,3039,2964,3938,4065,4801,3985,4734,4960,4728,4646,5385,5834,6397,0,6472,12073,4443,5839,5358,4944,6604,4951,4471,3946,3892,4044,2775,3138,4072,3557,2825,4133,4339,4087,0,3387,6535,2691,2980,3359,2751,2752,2521,2753,1979,2165,2145,0,4003,1579,1587,1013,1332,1763,1209,1487,1226,0,1176,936,1063,1114,903,0,1394,762,0,675,727,782,842,634,539,531,730,753,626,747,1168,0,617,613,513,630,586,1087,0,450,482,445,415,319,264,213,300,865,498,513,0,878,330,426,371,341,584,526,539,404,665,545,752,645,640,633,582,532,799,798,566,694,566,675,747,543,625,553,632,0,1111,624,583,661,671,666,385,531,615,755,659,575,567,433,582,710,736,736,847,832,707,773,825,908,1078,807,977,1123,1167,1313,1302,1376,1502,1436,1650,1637,1708,1808,2304,2165,2443,2128,2050,2298,2547,2738,2843,2665,2756,2954,3009,3306,3113,3045,2829,2839,2458,2829,3499,3262,3119,3308,3795,2885,2963,3138,3047,2729,3369,2362,2459,2731,2545,2972,3179,2615,1680,1704,2142,2256,2152,2260,1853,1974,1776,2155,2475,2463,2184,2272,1895,1947,2118,2481,2435,2007,2899,1877,2408,2123,3097,2417,2432,2521,1920,1800,1772,2363,1745,1927,1594,1629,1873,1563,1910,1644,2183,1599,1615,1220,1384,1508,1302,1286,1346,1037,1008,1072,1502,1270,1262,1404,1048,0,1912,1272,1245,1340,1328,1160,1050,1196,1361,1541,1315,1176,1392,1163,1388,1519,1579,1714,1780,1592,1353,1786,2258,2701,2338,2664,2253,2511,2351,3495,3449,3876,3667,3669,3270,3301,3946,4368,4468,4767,4525,4084,4757,4974,5234,4723,5020,4323,3953,4004,5329,5312,5139,5050,4584,4318,4503,5395,5364,4976,6127,5152,5445,5499,5857,5870,5908,5611,4825,4487,5292,5480,5112,4696,4414,4213,3377,0,4113,8495,4109,3786,3447,3084,2881,3265,2517,1531,2379,3232,2566,3256,4207,3070,4007,3084,3047,2253,2724,2726,2482,2455,2697,2117,1771,1843,2028,1893,1923,1629,1490,1383,1118,1303,1303,1194,1239,1019,838,1038,1119,1043,991,0,1957,663,930,1097,1042,935,901,914,735,979,1037,1277,1400,1228,1347,830,1517,1626,1843,1828,1980,1808,1775,1980,2545,2327,2949,2607,2452,2145,2579,2158,1425,0,4660,3752],\"type\":\"scatter\",\"mode\":\"lines+markers\",\"name\":\"Malaysia\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"2020-02-29\",\"2020-03-01\",\"2020-03-02\",\"2020-03-03\",\"2020-03-04\",\"2020-03-05\",\"2020-03-06\",\"2020-03-07\",\"2020-03-08\",\"2020-03-09\",\"2020-03-10\",\"2020-03-11\",\"2020-03-12\",\"2020-03-13\",\"2020-03-14\",\"2020-03-15\",\"2020-03-16\",\"2020-03-17\",\"2020-03-18\",\"2020-03-19\",\"2020-03-20\",\"2020-03-21\",\"2020-03-22\",\"2020-03-23\",\"2020-03-24\",\"2020-03-25\",\"2020-03-26\",\"2020-03-27\",\"2020-03-28\",\"2020-03-29\",\"2020-03-30\",\"2020-03-31\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-10\",\"2020-04-11\",\"2020-04-12\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-18\",\"2020-04-19\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-25\",\"2020-04-26\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-02\",\"2020-05-03\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-09\",\"2020-05-10\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-16\",\"2020-05-17\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-23\",\"2020-05-24\",\"2020-05-25\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-05-30\",\"2020-05-31\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-06\",\"2020-06-07\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-13\",\"2020-06-14\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-20\",\"2020-06-21\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-27\",\"2020-06-28\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-11\",\"2020-07-12\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-18\",\"2020-07-19\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-25\",\"2020-07-26\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-01\",\"2020-08-02\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-08\",\"2020-08-09\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-15\",\"2020-08-16\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-22\",\"2020-08-23\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-29\",\"2020-08-30\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-05\",\"2020-09-06\",\"2020-09-07\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-12\",\"2020-09-13\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-19\",\"2020-09-20\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-26\",\"2020-09-27\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-03\",\"2020-10-04\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-10\",\"2020-10-11\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-17\",\"2020-10-18\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-24\",\"2020-10-25\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-10-31\",\"2020-11-01\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-07\",\"2020-11-08\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-14\",\"2020-11-15\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-21\",\"2020-11-22\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-26\",\"2020-11-27\",\"2020-11-28\",\"2020-11-29\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-05\",\"2020-12-06\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-12\",\"2020-12-13\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-19\",\"2020-12-20\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-25\",\"2020-12-26\",\"2020-12-27\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\",\"2021-01-01\",\"2021-01-02\",\"2021-01-03\",\"2021-01-04\",\"2021-01-05\",\"2021-01-06\",\"2021-01-07\",\"2021-01-08\",\"2021-01-09\",\"2021-01-10\",\"2021-01-11\",\"2021-01-12\",\"2021-01-13\",\"2021-01-14\",\"2021-01-15\",\"2021-01-16\",\"2021-01-17\",\"2021-01-18\",\"2021-01-19\",\"2021-01-20\",\"2021-01-21\",\"2021-01-22\",\"2021-01-23\",\"2021-01-24\",\"2021-01-25\",\"2021-01-26\",\"2021-01-27\",\"2021-01-28\",\"2021-01-29\",\"2021-01-30\",\"2021-01-31\",\"2021-02-01\",\"2021-02-02\",\"2021-02-03\",\"2021-02-04\",\"2021-02-05\",\"2021-02-06\",\"2021-02-07\",\"2021-02-08\",\"2021-02-09\",\"2021-02-10\",\"2021-02-11\",\"2021-02-12\",\"2021-02-13\",\"2021-02-14\",\"2021-02-15\",\"2021-02-16\",\"2021-02-17\",\"2021-02-18\",\"2021-02-19\",\"2021-02-20\",\"2021-02-21\",\"2021-02-22\",\"2021-02-23\",\"2021-02-24\",\"2021-02-25\",\"2021-02-26\",\"2021-02-27\",\"2021-02-28\",\"2021-03-01\",\"2021-03-02\",\"2021-03-03\",\"2021-03-04\",\"2021-03-05\",\"2021-03-06\",\"2021-03-07\",\"2021-03-08\",\"2021-03-09\",\"2021-03-10\",\"2021-03-11\",\"2021-03-12\",\"2021-03-13\",\"2021-03-14\",\"2021-03-15\",\"2021-03-16\",\"2021-03-17\",\"2021-03-18\",\"2021-03-19\",\"2021-03-20\",\"2021-03-21\",\"2021-03-22\",\"2021-03-23\",\"2021-03-24\",\"2021-03-25\",\"2021-03-26\",\"2021-03-27\",\"2021-03-28\",\"2021-03-29\",\"2021-03-30\",\"2021-03-31\",\"2021-04-01\",\"2021-04-02\",\"2021-04-03\",\"2021-04-04\",\"2021-04-05\",\"2021-04-06\",\"2021-04-07\",\"2021-04-08\",\"2021-04-09\",\"2021-04-10\",\"2021-04-11\",\"2021-04-12\",\"2021-04-13\",\"2021-04-14\",\"2021-04-15\",\"2021-04-16\",\"2021-04-17\",\"2021-04-18\",\"2021-04-19\",\"2021-04-20\",\"2021-04-21\",\"2021-04-22\",\"2021-04-23\",\"2021-04-24\",\"2021-04-25\",\"2021-04-26\",\"2021-04-27\",\"2021-04-28\",\"2021-04-29\",\"2021-04-30\",\"2021-05-01\",\"2021-05-02\",\"2021-05-03\",\"2021-05-04\",\"2021-05-05\",\"2021-05-06\",\"2021-05-07\",\"2021-05-08\",\"2021-05-09\",\"2021-05-10\",\"2021-05-11\",\"2021-05-12\",\"2021-05-13\",\"2021-05-14\",\"2021-05-15\",\"2021-05-16\",\"2021-05-17\",\"2021-05-18\",\"2021-05-19\",\"2021-05-20\",\"2021-05-21\",\"2021-05-22\",\"2021-05-23\",\"2021-05-24\",\"2021-05-25\",\"2021-05-26\",\"2021-05-27\",\"2021-05-28\",\"2021-05-29\",\"2021-05-30\",\"2021-05-31\",\"2021-06-01\",\"2021-06-02\",\"2021-06-03\",\"2021-06-04\",\"2021-06-05\",\"2021-06-06\",\"2021-06-07\",\"2021-06-08\",\"2021-06-09\",\"2021-06-10\",\"2021-06-11\",\"2021-06-12\",\"2021-06-13\",\"2021-06-14\",\"2021-06-15\",\"2021-06-16\",\"2021-06-17\",\"2021-06-18\",\"2021-06-19\",\"2021-06-20\",\"2021-06-21\",\"2021-06-22\",\"2021-06-23\",\"2021-06-24\",\"2021-06-25\",\"2021-06-26\",\"2021-06-27\",\"2021-06-28\",\"2021-06-29\",\"2021-06-30\",\"2021-07-01\",\"2021-07-02\",\"2021-07-03\",\"2021-07-04\",\"2021-07-05\",\"2021-07-06\",\"2021-07-07\",\"2021-07-08\",\"2021-07-09\",\"2021-07-10\",\"2021-07-11\",\"2021-07-12\",\"2021-07-13\",\"2021-07-14\",\"2021-07-15\",\"2021-07-16\",\"2021-07-17\",\"2021-07-18\",\"2021-07-19\",\"2021-07-20\",\"2021-07-21\",\"2021-07-22\",\"2021-07-23\",\"2021-07-24\",\"2021-07-25\"],\"y\":[0,0,2,0,23,2,1,3,5,4,13,6,11,9,20,11,6,23,14,38,50,86,66,103,37,121,70,160,100,37,227,146,601,545,24,515,506,1190,533,605,809,873,848,759,1248,1034,835,1108,922,1370,1893,924,1541,1290,1707,1453,1753,1607,1561,1873,1738,1801,2394,2442,2806,3932,2963,3587,3364,3344,3113,4353,3607,3524,3763,3942,3787,4864,5050,4630,6147,5553,6198,6568,6629,7113,6414,5843,7293,7300,8105,8336,8782,7761,8821,9633,9889,9471,10438,10864,8442,10218,10459,10930,11458,11929,11502,10667,10974,12881,13586,14516,15403,14831,14933,15968,16922,17296,18552,19906,19459,18522,18641,19160,20903,22771,24850,24248,22251,22753,24879,26506,27114,28606,28732,28498,29429,32676,34975,35252,38697,40425,37132,37740,45720,49310,48916,48611,49981,44457,51596,50294,52783,61242,54735,52972,52050,52509,56282,62538,61537,64399,62064,53601,60963,66999,64553,64732,64030,57711,55018,64572,69672,68900,69876,69239,61408,60975,57224,85687,77266,76472,78761,78512,69921,78357,83883,83341,86432,90632,90802,75809,89706,95735,96551,97570,94372,92071,83809,90123,97894,96424,93337,92605,86961,75083,83347,86508,86052,85362,88600,82170,70589,80472,86821,81484,79476,75829,74442,61267,72049,78524,70496,73272,74383,66732,55342,63509,67708,63371,62212,61871,55722,46790,54044,55839,54366,53370,50129,45148,36470,43893,49881,48648,48268,46963,45231,38310,46253,50210,47638,50356,45674,45903,38073,44281,47905,44879,44684,41100,30548,29163,38617,45576,45882,46232,45209,44059,37975,44376,44489,43082,41322,41810,38772,31118,36604,35551,36595,36652,36011,32981,26567,32080,31521,29373,30031,30254,27071,22065,26382,24010,22890,25152,26624,24337,19556,23950,24712,23067,22273,18732,20021,16432,20549,21822,20035,39114,-1858,16504,16375,18088,20346,18139,0,36867,16311,12584,15968,16946,15590,15158,15144,13788,10050,13816,15244,14545,14256,14849,13203,9102,12689,11666,18855,13082,13044,11436,8635,11039,12899,12408,11713,12059,11831,9110,11067,12923,9309,12143,12194,11649,9121,11610,12881,13193,13993,14264,14199,10584,13742,16738,16577,16488,16752,15510,12286,14989,17407,16838,18284,18754,18599,15388,17921,22854,23285,24882,25320,26291,24492,28903,35871,39726,40953,43846,46951,40715,47262,53476,59118,62258,62714,68020,56211,53480,72330,81466,89129,93249,103558,96982,115736,126789,131968,145384,152879,168912,161736,184372,200739,217353,234692,261394,273802,259167,295158,314644,332921,346786,349691,352991,323023,360927,379308,386555,401993,392488,368060,357316,382146,412431,414188,401078,403405,366494,329942,348421,362727,343144,326098,311170,281386,263533,267334,276110,259551,257299,240842,222315,196427,208921,211298,186364,173790,165553,152734,127510,132788,134154,132364,120529,114460,100636,86498,92596,93463,92291,84332,80834,70421,60471,62224,67208,62480,60753,58226,53449,42640,50848,54069,51667,48698,50040,46148,37566,45951,48786,46617,44111,43071,39796,34703,43733,45892,43393,42766,41506,37154,32906,38865,41733,38949,38079,41157,38164,30093,42015,41383,35342,0,78839,39361],\"type\":\"scatter\",\"mode\":\"lines+markers\",\"name\":\"Singapore\",\"marker\":{\"color\":\"rgba(255,127,14,1)\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"line\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"2020-02-29\",\"2020-03-01\",\"2020-03-02\",\"2020-03-03\",\"2020-03-04\",\"2020-03-05\",\"2020-03-06\",\"2020-03-07\",\"2020-03-08\",\"2020-03-09\",\"2020-03-10\",\"2020-03-11\",\"2020-03-12\",\"2020-03-13\",\"2020-03-14\",\"2020-03-15\",\"2020-03-16\",\"2020-03-17\",\"2020-03-18\",\"2020-03-19\",\"2020-03-20\",\"2020-03-21\",\"2020-03-22\",\"2020-03-23\",\"2020-03-24\",\"2020-03-25\",\"2020-03-26\",\"2020-03-27\",\"2020-03-28\",\"2020-03-29\",\"2020-03-30\",\"2020-03-31\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-10\",\"2020-04-11\",\"2020-04-12\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-18\",\"2020-04-19\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-25\",\"2020-04-26\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-02\",\"2020-05-03\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-09\",\"2020-05-10\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-16\",\"2020-05-17\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-23\",\"2020-05-24\",\"2020-05-25\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-05-30\",\"2020-05-31\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-06\",\"2020-06-07\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-13\",\"2020-06-14\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-20\",\"2020-06-21\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-27\",\"2020-06-28\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-11\",\"2020-07-12\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-18\",\"2020-07-19\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-25\",\"2020-07-26\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-01\",\"2020-08-02\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-08\",\"2020-08-09\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-15\",\"2020-08-16\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-22\",\"2020-08-23\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-29\",\"2020-08-30\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-05\",\"2020-09-06\",\"2020-09-07\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-12\",\"2020-09-13\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-19\",\"2020-09-20\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-26\",\"2020-09-27\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-03\",\"2020-10-04\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-10\",\"2020-10-11\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-17\",\"2020-10-18\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-24\",\"2020-10-25\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-10-31\",\"2020-11-01\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-07\",\"2020-11-08\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-14\",\"2020-11-15\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-21\",\"2020-11-22\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-26\",\"2020-11-27\",\"2020-11-28\",\"2020-11-29\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-05\",\"2020-12-06\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-12\",\"2020-12-13\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-19\",\"2020-12-20\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-25\",\"2020-12-26\",\"2020-12-27\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\",\"2021-01-01\",\"2021-01-02\",\"2021-01-03\",\"2021-01-04\",\"2021-01-05\",\"2021-01-06\",\"2021-01-07\",\"2021-01-08\",\"2021-01-09\",\"2021-01-10\",\"2021-01-11\",\"2021-01-12\",\"2021-01-13\",\"2021-01-14\",\"2021-01-15\",\"2021-01-16\",\"2021-01-17\",\"2021-01-18\",\"2021-01-19\",\"2021-01-20\",\"2021-01-21\",\"2021-01-22\",\"2021-01-23\",\"2021-01-24\",\"2021-01-25\",\"2021-01-26\",\"2021-01-27\",\"2021-01-28\",\"2021-01-29\",\"2021-01-30\",\"2021-01-31\",\"2021-02-01\",\"2021-02-02\",\"2021-02-03\",\"2021-02-04\",\"2021-02-05\",\"2021-02-06\",\"2021-02-07\",\"2021-02-08\",\"2021-02-09\",\"2021-02-10\",\"2021-02-11\",\"2021-02-12\",\"2021-02-13\",\"2021-02-14\",\"2021-02-15\",\"2021-02-16\",\"2021-02-17\",\"2021-02-18\",\"2021-02-19\",\"2021-02-20\",\"2021-02-21\",\"2021-02-22\",\"2021-02-23\",\"2021-02-24\",\"2021-02-25\",\"2021-02-26\",\"2021-02-27\",\"2021-02-28\",\"2021-03-01\",\"2021-03-02\",\"2021-03-03\",\"2021-03-04\",\"2021-03-05\",\"2021-03-06\",\"2021-03-07\",\"2021-03-08\",\"2021-03-09\",\"2021-03-10\",\"2021-03-11\",\"2021-03-12\",\"2021-03-13\",\"2021-03-14\",\"2021-03-15\",\"2021-03-16\",\"2021-03-17\",\"2021-03-18\",\"2021-03-19\",\"2021-03-20\",\"2021-03-21\",\"2021-03-22\",\"2021-03-23\",\"2021-03-24\",\"2021-03-25\",\"2021-03-26\",\"2021-03-27\",\"2021-03-28\",\"2021-03-29\",\"2021-03-30\",\"2021-03-31\",\"2021-04-01\",\"2021-04-02\",\"2021-04-03\",\"2021-04-04\",\"2021-04-05\",\"2021-04-06\",\"2021-04-07\",\"2021-04-08\",\"2021-04-09\",\"2021-04-10\",\"2021-04-11\",\"2021-04-12\",\"2021-04-13\",\"2021-04-14\",\"2021-04-15\",\"2021-04-16\",\"2021-04-17\",\"2021-04-18\",\"2021-04-19\",\"2021-04-20\",\"2021-04-21\",\"2021-04-22\",\"2021-04-23\",\"2021-04-24\",\"2021-04-25\",\"2021-04-26\",\"2021-04-27\",\"2021-04-28\",\"2021-04-29\",\"2021-04-30\",\"2021-05-01\",\"2021-05-02\",\"2021-05-03\",\"2021-05-04\",\"2021-05-05\",\"2021-05-06\",\"2021-05-07\",\"2021-05-08\",\"2021-05-09\",\"2021-05-10\",\"2021-05-11\",\"2021-05-12\",\"2021-05-13\",\"2021-05-14\",\"2021-05-15\",\"2021-05-16\",\"2021-05-17\",\"2021-05-18\",\"2021-05-19\",\"2021-05-20\",\"2021-05-21\",\"2021-05-22\",\"2021-05-23\",\"2021-05-24\",\"2021-05-25\",\"2021-05-26\",\"2021-05-27\",\"2021-05-28\",\"2021-05-29\",\"2021-05-30\",\"2021-05-31\",\"2021-06-01\",\"2021-06-02\",\"2021-06-03\",\"2021-06-04\",\"2021-06-05\",\"2021-06-06\",\"2021-06-07\",\"2021-06-08\",\"2021-06-09\",\"2021-06-10\",\"2021-06-11\",\"2021-06-12\",\"2021-06-13\",\"2021-06-14\",\"2021-06-15\",\"2021-06-16\",\"2021-06-17\",\"2021-06-18\",\"2021-06-19\",\"2021-06-20\",\"2021-06-21\",\"2021-06-22\",\"2021-06-23\",\"2021-06-24\",\"2021-06-25\",\"2021-06-26\",\"2021-06-27\",\"2021-06-28\",\"2021-06-29\",\"2021-06-30\",\"2021-07-01\",\"2021-07-02\",\"2021-07-03\",\"2021-07-04\",\"2021-07-05\",\"2021-07-06\",\"2021-07-07\",\"2021-07-08\",\"2021-07-09\",\"2021-07-10\",\"2021-07-11\",\"2021-07-12\",\"2021-07-13\",\"2021-07-14\",\"2021-07-15\",\"2021-07-16\",\"2021-07-17\",\"2021-07-18\",\"2021-07-19\",\"2021-07-20\",\"2021-07-21\",\"2021-07-22\",\"2021-07-23\",\"2021-07-24\",\"2021-07-25\"],\"y\":[0,0,0,1,2,0,0,0,1,2,1,3,1,1,2,1,2,2,4,1,4,1,4,7,2,33,4,11,16,11,28,29,22,43,35,25,38,30,56,21,40,47,24,52,58,49,70,56,66,27,63,30,66,84,59,95,133,68,172,126,110,187,164,179,235,190,330,168,171,217,261,361,284,281,259,413,414,349,262,408,581,492,531,542,782,584,591,658,625,580,623,866,680,545,759,758,787,915,582,791,575,542,684,748,656,556,664,761,783,564,658,346,546,409,310,324,234,460,276,165,351,271,279,319,186,302,348,279,239,194,210,314,286,172,85,154,135,254,76,159,60,174,40,112,112,201,60,48,121,106,105,105,69,133,35,1,36,36,47,108,78,40,37,70,107,76,86,75,45,48,77,43,40,102,33,59,46,55,16,42,16,11,3,22,4,34,50,45,16,20,74,96,26,24,28,34,35,75,56,43,40,17,25,22,125,30,22,49,25,16,6,35,12,15,14,17,5,7,44,81,64,62,68,77,10,96,71,58,66,32,62,53,59,87,82,141,116,61,81,65,104,95,113,123,66,91,76,132,95,86,121,40,58,126,138,166,146,186,174,66,205,228,213,243,253,186,140,203,282,186,210,216,123,121,272,158,242,202,119,0,235,234,210,200,135,202,63,113,298,191,234,209,217,243,60,136,196,177,243,222,155,76,153,241,70,55,121,0,0,0,1485,94,0,102,125,68,89,49,46,0,191,56,107,46,78,79,137,125,80,76,36,77,78,104,37,48,69,15,36,62,53,57,34,65,5,24,25,18,18,25,28,19,22,4,22,17,18,5,24,13,29,18,16,16,11,7,19,26,11,5,52,13,7,29,0,18,23,42,0,26,0,10,21,28,25,24,10,50,24,15,34,28,36,4,28,62,70,63,55,23,81,41,62,94,70,76,125,16,82,122,128,42,78,109,72,105,139,177,98,230,188,113,172,210,145,206,169,194,183,178,263,234,365,293,300,87,221,340,315,327,310,57,72,114,221,303,453,505,406,242,547,628,840,623,764,981,650,1077,1139,1049,1093,1509,1335,1261,1617,1485,1724,1842,1824,1024,1121,1597,1814,16,3243,2203,0,0,5168,1847,2208,1575,2060,0,0,4159,1407,1501,1557,0,0,0,5721,1527,1557,1092,1473,0,0,3067,0,1990,1210,0,0,0,3636,925,0,769,256,0,0],\"type\":\"scatter\",\"mode\":\"lines+markers\",\"name\":\"Brunei\",\"marker\":{\"color\":\"rgba(44,160,44,1)\",\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"line\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"2020-02-29\",\"2020-03-01\",\"2020-03-02\",\"2020-03-03\",\"2020-03-04\",\"2020-03-05\",\"2020-03-06\",\"2020-03-07\",\"2020-03-08\",\"2020-03-09\",\"2020-03-10\",\"2020-03-11\",\"2020-03-12\",\"2020-03-13\",\"2020-03-14\",\"2020-03-15\",\"2020-03-16\",\"2020-03-17\",\"2020-03-18\",\"2020-03-19\",\"2020-03-20\",\"2020-03-21\",\"2020-03-22\",\"2020-03-23\",\"2020-03-24\",\"2020-03-25\",\"2020-03-26\",\"2020-03-27\",\"2020-03-28\",\"2020-03-29\",\"2020-03-30\",\"2020-03-31\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-10\",\"2020-04-11\",\"2020-04-12\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-18\",\"2020-04-19\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-25\",\"2020-04-26\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-02\",\"2020-05-03\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-09\",\"2020-05-10\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-16\",\"2020-05-17\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-23\",\"2020-05-24\",\"2020-05-25\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-05-30\",\"2020-05-31\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-06\",\"2020-06-07\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-13\",\"2020-06-14\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-20\",\"2020-06-21\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-27\",\"2020-06-28\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-11\",\"2020-07-12\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-18\",\"2020-07-19\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-25\",\"2020-07-26\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-01\",\"2020-08-02\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-08\",\"2020-08-09\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-15\",\"2020-08-16\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-22\",\"2020-08-23\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-29\",\"2020-08-30\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-05\",\"2020-09-06\",\"2020-09-07\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-12\",\"2020-09-13\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-19\",\"2020-09-20\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-26\",\"2020-09-27\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-03\",\"2020-10-04\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-10\",\"2020-10-11\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-17\",\"2020-10-18\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-24\",\"2020-10-25\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-10-31\",\"2020-11-01\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-07\",\"2020-11-08\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-14\",\"2020-11-15\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-21\",\"2020-11-22\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-26\",\"2020-11-27\",\"2020-11-28\",\"2020-11-29\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-05\",\"2020-12-06\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-12\",\"2020-12-13\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-19\",\"2020-12-20\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-25\",\"2020-12-26\",\"2020-12-27\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\",\"2021-01-01\",\"2021-01-02\",\"2021-01-03\",\"2021-01-04\",\"2021-01-05\",\"2021-01-06\",\"2021-01-07\",\"2021-01-08\",\"2021-01-09\",\"2021-01-10\",\"2021-01-11\",\"2021-01-12\",\"2021-01-13\",\"2021-01-14\",\"2021-01-15\",\"2021-01-16\",\"2021-01-17\",\"2021-01-18\",\"2021-01-19\",\"2021-01-20\",\"2021-01-21\",\"2021-01-22\",\"2021-01-23\",\"2021-01-24\",\"2021-01-25\",\"2021-01-26\",\"2021-01-27\",\"2021-01-28\",\"2021-01-29\",\"2021-01-30\",\"2021-01-31\",\"2021-02-01\",\"2021-02-02\",\"2021-02-03\",\"2021-02-04\",\"2021-02-05\",\"2021-02-06\",\"2021-02-07\",\"2021-02-08\",\"2021-02-09\",\"2021-02-10\",\"2021-02-11\",\"2021-02-12\",\"2021-02-13\",\"2021-02-14\",\"2021-02-15\",\"2021-02-16\",\"2021-02-17\",\"2021-02-18\",\"2021-02-19\",\"2021-02-20\",\"2021-02-21\",\"2021-02-22\",\"2021-02-23\",\"2021-02-24\",\"2021-02-25\",\"2021-02-26\",\"2021-02-27\",\"2021-02-28\",\"2021-03-01\",\"2021-03-02\",\"2021-03-03\",\"2021-03-04\",\"2021-03-05\",\"2021-03-06\",\"2021-03-07\",\"2021-03-08\",\"2021-03-09\",\"2021-03-10\",\"2021-03-11\",\"2021-03-12\",\"2021-03-13\",\"2021-03-14\",\"2021-03-15\",\"2021-03-16\",\"2021-03-17\",\"2021-03-18\",\"2021-03-19\",\"2021-03-20\",\"2021-03-21\",\"2021-03-22\",\"2021-03-23\",\"2021-03-24\",\"2021-03-25\",\"2021-03-26\",\"2021-03-27\",\"2021-03-28\",\"2021-03-29\",\"2021-03-30\",\"2021-03-31\",\"2021-04-01\",\"2021-04-02\",\"2021-04-03\",\"2021-04-04\",\"2021-04-05\",\"2021-04-06\",\"2021-04-07\",\"2021-04-08\",\"2021-04-09\",\"2021-04-10\",\"2021-04-11\",\"2021-04-12\",\"2021-04-13\",\"2021-04-14\",\"2021-04-15\",\"2021-04-16\",\"2021-04-17\",\"2021-04-18\",\"2021-04-19\",\"2021-04-20\",\"2021-04-21\",\"2021-04-22\",\"2021-04-23\",\"2021-04-24\",\"2021-04-25\",\"2021-04-26\",\"2021-04-27\",\"2021-04-28\",\"2021-04-29\",\"2021-04-30\",\"2021-05-01\",\"2021-05-02\",\"2021-05-03\",\"2021-05-04\",\"2021-05-05\",\"2021-05-06\",\"2021-05-07\",\"2021-05-08\",\"2021-05-09\",\"2021-05-10\",\"2021-05-11\",\"2021-05-12\",\"2021-05-13\",\"2021-05-14\",\"2021-05-15\",\"2021-05-16\",\"2021-05-17\",\"2021-05-18\",\"2021-05-19\",\"2021-05-20\",\"2021-05-21\",\"2021-05-22\",\"2021-05-23\",\"2021-05-24\",\"2021-05-25\",\"2021-05-26\",\"2021-05-27\",\"2021-05-28\",\"2021-05-29\",\"2021-05-30\",\"2021-05-31\",\"2021-06-01\",\"2021-06-02\",\"2021-06-03\",\"2021-06-04\",\"2021-06-05\",\"2021-06-06\",\"2021-06-07\",\"2021-06-08\",\"2021-06-09\",\"2021-06-10\",\"2021-06-11\",\"2021-06-12\",\"2021-06-13\",\"2021-06-14\",\"2021-06-15\",\"2021-06-16\",\"2021-06-17\",\"2021-06-18\",\"2021-06-19\",\"2021-06-20\",\"2021-06-21\",\"2021-06-22\",\"2021-06-23\",\"2021-06-24\",\"2021-06-25\",\"2021-06-26\",\"2021-06-27\",\"2021-06-28\",\"2021-06-29\",\"2021-06-30\",\"2021-07-01\",\"2021-07-02\",\"2021-07-03\",\"2021-07-04\",\"2021-07-05\",\"2021-07-06\",\"2021-07-07\",\"2021-07-08\",\"2021-07-09\",\"2021-07-10\",\"2021-07-11\",\"2021-07-12\",\"2021-07-13\",\"2021-07-14\",\"2021-07-15\",\"2021-07-16\",\"2021-07-17\",\"2021-07-18\",\"2021-07-19\",\"2021-07-20\",\"2021-07-21\",\"2021-07-22\",\"2021-07-23\",\"2021-07-24\",\"2021-07-25\"],\"y\":[0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,2,3,2,4,3,3,5,2,6,6,0,5,4,0,0,1,2,3,2,5,9,18,35,41,54,112,94,58,139,182,209,219,341,266,306,312,492,434,390,414,503,309,418,497,549,641,564,571,552,665,688,786,790,706,709,636,887,1034,969,1162,1041,1202,930,1273,1602,1251,1617,1773,1694,1873,1532,1975,1166,1541,2029,2523,1764,2545,2381,2911,2695,2423,2828,2635,2743,2735,3171,3190,3187,3471,2856,3141,3099,3862,4008,3803,3243,3240,3531,3480,3412,3462,3946,3868,3504,3809,4014,3682,3775,4019,3114,3288,2738,3201,3027,3489,3360,2949,2686,2666,3099,3163,3533,2733,3034,2709,2459,2928,3057,2744,2856,2548,2520,2275,2772,2960,3009,2695,2772,2199,886,1356,1918,2654,2977,2851,2611,2487,2907,2996,2995,2617,2766,2644,2024,2595,3200,2747,2868,2401,2265,1973,2485,2545,2519,2436,2211,2131,1897,2174,1950,2582,2158,1929,1950,1592,2202,1892,1827,1892,1792,1282,1476,1812,1724,1615,1593,1541,1567,1546,1703,1557,1666,1540,1383,1106,1275,1407,1488,1436,1508,1396,1182,1125,1442,1499,1520,1441,1278,1203,1193,1472,1537,1684,1600,1527,1209,1274,1637,1380,1545,1696,1586,1094,1308,1436,1335,1493,1681,1604,1320,1568,1736,1659,1517,1842,1469,1289,1474,1683,1699,1733,1845,1767,1531,1837,2139,2212,2111,2364,2275,1847,2060,2419,2230,2156,2292,2273,1908,1788,2525,2293,2198,2316,2252,1798,1756,2198,2202,2159,1861,1884,1329,1355,1799,1877,1632,1134,1318,1267,1153,1470,1318,1367,1234,1163,834,1049,932,1181,1235,1014,990,684,835,910,991,978,1007,785,692,1071,849,718,890,813,762,578,569,697,702,656,584,619,436,473,602,515,528,509,454,363,369,443,525,438,485,435,305,292,316,387,388,378,444,291,326,446,396,443,391,406,350,327,366,399,428,410,470,407,385,585,515,614,619,635,540,606,845,912,1018,1051,1066,1014,1159,1773,1719,1865,2187,1899,1868,2172,2809,3554,3567,3587,3737,3674,3908,5181,5042,5358,6469,6830,5683,7087,7075,7213,7626,6854,7462,5343,5819,7201,6028,5185,4192,4417,3473,3698,4271,4559,4280,4014,3629,2697,2922,3306,3031,2955,2341,2177,1452,1359,1739,1914,1742,1822,1682,1285,1386,1514,1230,1140,1290,848,261,363,698,1272,1608,1457,1504,1028,1354,1441,1675,1497,1292,1358,1043,1444,1710,1765,1988,1687,1887,1447,1676,1970,2322,2537,2576,2454,1637,2436,3050,3319,3956,3840,3883,3057,3641,4636,4846,5727,6058,5869,4334,5268,8364,7666,8822,8301,8483,6214,8661,9964,11525,11162,11651,11324,8772,11874,13768,12198,12383,12236,12148,8489,11578,13321,11579,7614,3697,6364,6780,11291],\"type\":\"scatter\",\"mode\":\"lines+markers\",\"name\":\"Thailand\",\"marker\":{\"color\":\"rgba(214,39,40,1)\",\"line\":{\"color\":\"rgba(214,39,40,1)\"}},\"error_y\":{\"color\":\"rgba(214,39,40,1)\"},\"error_x\":{\"color\":\"rgba(214,39,40,1)\"},\"line\":{\"color\":\"rgba(214,39,40,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\r\n\r\nCases distribution by type\r\n\r\n\r\n\r\n\r\n{\"x\":{\"visdat\":{\"57bc1cd62d22\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"57bc1cd62d22\",\"attrs\":{\"57bc1cd62d22\":{\"x\":{},\"y\":{},\"marker\":{\"color\":\"#1f77b4\"},\"name\":\"Confirmed\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\"},\"57bc1cd62d22.1\":{\"x\":{},\"y\":{},\"marker\":{\"color\":\"red\"},\"name\":\"Death\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":10,\"l\":60,\"t\":10,\"r\":10,\"pad\":2},\"barmode\":\"stack\",\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Total cases\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"Brunei\",\"Singapore\",\"Thailand\",\"Malaysia\"]},\"hovermode\":\"compare\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"showSendToCloud\":false},\"data\":[{\"x\":[\"Brunei\",\"Singapore\",\"Thailand\",\"Malaysia\"],\"y\":[321,64179,497302,1013438],\"marker\":{\"color\":\"#1f77b4\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"name\":\"Confirmed\",\"type\":\"bar\",\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[\"Brunei\",\"Singapore\",\"Thailand\",\"Malaysia\"],\"y\":[3,37,4059,7994],\"marker\":{\"color\":\"red\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"name\":\"Death\",\"type\":\"bar\",\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n$(document).ready(function () {\r\n\r\n  // add bootstrap table styles to pandoc tables\r\n  $('tr.header').parent('thead').parent('table').addClass('table table-condensed');\r\n\r\n  // initialize mathjax\r\n  var script = document.createElement(\"script\");\r\n  script.type = \"text/javascript\";\r\n  script.src  = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\";\r\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\r\n\r\n});\r\n\r\n$(document).ready(function () {\r\n  FlexDashboard.init({\r\n    theme: \"united\",\r\n    fillPage: true,\r\n    orientation: \"rows\",\r\n    storyboard: false,\r\n    defaultFigWidth: 576,\r\n    defaultFigHeight: 460,\r\n    defaultFigWidthMobile: 360,\r\n    defaultFigHeightMobile: 460,\r\n    resize_reload: true\r\n  });\r\n});\r\n",
      "last_modified": "2021-07-27T01:13:00+08:00"
    },
    {
      "path": "index.html",
      "title": " COVID-19",
      "author": [],
      "contents": "\r\n\r\n          \r\n          \r\n           SIDPG1\r\n          \r\n          \r\n          Home\r\n          Overview\r\n          Dashboard\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          \r\n          â˜°\r\n          \r\n          \r\n      \r\n        \r\n          \r\n            COVID-19\r\n          \r\n          \r\n            \r\n              TEMPERATURE AND MOVEMENT TRACKING\r\n            \r\n            \r\n              TEMPERATURE AND MOVEMENT TRACKING\r\n            \r\n          \r\n\r\n          \r\n            \r\n              \r\n          \r\n\r\n          \r\n            \r\n              \r\n                              \r\n            \r\n          \r\n        \r\n      \r\n    \r\n\r\n    \r\n    \r\n    ",
      "last_modified": "2021-07-27T01:13:00+08:00"
    }
  ],
  "collections": []
}
